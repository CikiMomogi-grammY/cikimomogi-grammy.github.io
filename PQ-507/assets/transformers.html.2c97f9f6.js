import{_ as l,r as c,o as u,c as r,b as s,a,w as o,d as n,e as t}from"./app.9a621f1c.js";const d={},m=a("h1",{id:"transformadores-de-la-api-del-bot",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#transformadores-de-la-api-del-bot","aria-hidden":"true"},"#"),n(" Transformadores de la API del Bot")],-1),k=a("p",null,"El middleware es una funci\xF3n que maneja un objeto de contexto, es decir, datos entrantes.",-1),v=a("p",null,[n("grammY tambi\xE9n le proporciona la inversa. Una "),a("em",null,"funci\xF3n transformadora"),n(" es una funci\xF3n que maneja datos de salida, es decir")],-1),b=a("ul",null,[a("li",null,"un nombre de m\xE9todo de la API del Bot al que llamar."),a("li",null,"un objeto de carga \xFAtil que coincide con el m\xE9todo.")],-1),f=n("En lugar de tener "),h=a("code",null,"next",-1),g=n(" como \xFAltimo argumento para invocar el middleware de salida, se recibe "),_=a("code",null,"prev",-1),x=n(" como primer argumento para utilizar las funciones transformadoras de salida. Mirando la firma de tipo de "),y=a("code",null,"Transformer",-1),w=n(" ("),q={href:"https://doc.deno.land/https://deno.land/x/grammy/mod.ts/~/Transformer",target:"_blank",rel:"noopener noreferrer"},A=n("grammY API Reference"),j=n("), podemos ver c\xF3mo refleja esto. Observa que "),P=a("code",null,[n("Payload<M"),a("wbr"),n(", R>")],-1),I=n(" se refiere al objeto payload que tiene que coincidir con el m\xE9todo dado, y que "),E=a("code",null,[n("Api"),a("wbr"),n("Response<Api"),a("wbr"),n("Call"),a("wbr"),n("Result<M"),a("wbr"),n(", R>>")],-1),T=n(" es el tipo de retorno del m\xE9todo invocado."),C=t(`<p>La \xFAltima funci\xF3n transformadora invocada es un caller incorporado que hace cosas como la serializaci\xF3n JSON de ciertos campos, y eventualmente llama a <code>fetch</code>.</p><p>No hay un equivalente a una clase <code>Composer</code> para las funciones transformadoras porque probablemente sea excesivo, pero si lo necesitas, puedes escribir el tuyo propio. \xA1PR bienvenido! \u{1F609}</p><h2 id="instalar-una-funcion-transformadora" tabindex="-1"><a class="header-anchor" href="#instalar-una-funcion-transformadora" aria-hidden="true">#</a> Instalar una funci\xF3n transformadora</h2><p>Las funciones transformadoras pueden ser instaladas en <code>bot<wbr>.api</code>. Aqu\xED hay un ejemplo para una funci\xF3n transformadora que no hace nada:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// Funci\xF3n transformadora de paso</span>
bot<span class="token punctuation">.</span>api<span class="token punctuation">.</span>config<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span>prev<span class="token punctuation">,</span> method<span class="token punctuation">,</span> payload<span class="token punctuation">,</span> signal<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token function">prev</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> payload<span class="token punctuation">,</span> signal<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Comparaci\xF3n con el middleware de paso</span>
bot<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> next<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Aqu\xED hay un ejemplo de una funci\xF3n transformadora que evita que se produzcan todas las llamadas a la API:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// Devuelve incorrectamente undefined en lugar de los respectivos tipos de objetos.</span>
bot<span class="token punctuation">.</span>api<span class="token punctuation">.</span>config<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span>prev<span class="token punctuation">,</span> method<span class="token punctuation">,</span> payload<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">undefined</span> <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Tambi\xE9n puedes instalar funciones transformadoras en el objeto API del objeto de contexto. La funci\xF3n transformadora s\xF3lo se utilizar\xE1 temporalmente para las solicitudes de la API que se realicen en ese objeto de contexto espec\xEDfico. Las llamadas a <code>bot<wbr>.api</code> no se ven afectadas. Las llamadas a trav\xE9s de objetos de contexto de middleware que se ejecutan simult\xE1neamente tampoco se ven afectadas. Tan pronto como el middleware respectivo se completa, la funci\xF3n transformadora se descarta.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Se instala en todos los objetos de contexto que procesan mensajes.</span>
  ctx<span class="token punctuation">.</span>api<span class="token punctuation">.</span>config<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span>prev<span class="token punctuation">,</span> method<span class="token punctuation">,</span> payload<span class="token punctuation">,</span> signal<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    <span class="token function">prev</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> payload<span class="token punctuation">,</span> signal<span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>El par\xE1metro <code>signal</code> debe pasarse siempre a <code>prev</code>. Permite cancelar peticiones y es importante para que <code>bot<wbr>.stop</code> funcione.</p></blockquote><p>Las funciones de transformaci\xF3n instaladas en <code>bot<wbr>.api</code> ser\xE1n preinstaladas en cada objeto <code>ctx<wbr>.api</code>. As\xED, las llamadas a <code>ctx<wbr>.api</code> ser\xE1n transformadas tanto por los transformadores de <code>ctx<wbr>.api</code> como por los transformadores instalados en <code>bot<wbr>.api</code>.</p><h2 id="casos-de-uso-de-las-funciones-de-transformacion" tabindex="-1"><a class="header-anchor" href="#casos-de-uso-de-las-funciones-de-transformacion" aria-hidden="true">#</a> Casos de uso de las funciones de transformaci\xF3n</h2><p>Las funciones transformadoras son tan flexibles como el middleware, y tienen tantas aplicaciones diferentes.</p>`,13),L=n("Por ejemplo, el plugin "),R=n("grammY menu"),z=n(" instala una funci\xF3n transformadora para convertir las instancias de men\xFA salientes en la carga \xFAtil correcta. Tambi\xE9n puedes utilizarlos para:"),S=n("implementar "),F=n("flood control"),Y=a("li",null,"simular solicitudes de la API durante las pruebas",-1),M=n("a\xF1adir "),N=n("auto"),D=a("wbr",null,null,-1),B=n("-retry"),O=t('<p>Ten en cuenta, sin embargo, que reintentar una llamada a la API puede tener efectos secundarios extra\xF1os: si llamas a <code>send<wbr>Document</code> y pasas una instancia de stream legible a <code>Input<wbr>File</code>, entonces el stream ser\xE1 le\xEDdo la primera vez que se intente la petici\xF3n. Si invocas <code>prev</code> de nuevo, el flujo puede estar ya consumido (parcialmente), lo que lleva a archivos rotos. Por lo tanto, es una forma m\xE1s fiable de pasar las rutas de los archivos a <code>Input<wbr>File</code>, para que grammY pueda recrear el flujo cuando sea necesario.</p><h2 id="api-flavoring" tabindex="-1"><a class="header-anchor" href="#api-flavoring" aria-hidden="true">#</a> API Flavoring</h2>',2),K=n("grammY cuenta con "),V=n("context flavors"),U=t(" que pueden ser usados para ajustar el tipo de contexto. Esto incluye los m\xE9todos de la API, tanto los que est\xE1n directamente en el objeto de contexto como <code>ctx<wbr>.reply</code>, y todos los m\xE9todos en <code>ctx<wbr>.api</code> y <code>ctx<wbr>.api<wbr>.raw</code>. Sin embargo, no puedes ajustar los tipos de <code>bot<wbr>.api</code> y <code>bot<wbr>.api<wbr>.raw</code> a trav\xE9s de los context flavors.",11),H=t(`<p>Por eso grammY admite los <em>API flavors</em>. Estos resuelven este problema:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Api<span class="token punctuation">,</span> Bot<span class="token punctuation">,</span> Context <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;grammy&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> SomeApiFlavor<span class="token punctuation">,</span> SomeContextFlavor<span class="token punctuation">,</span> somePlugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;some-plugin&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// Context flavoring</span>
<span class="token keyword">type</span> <span class="token class-name">MyContext</span> <span class="token operator">=</span> Context <span class="token operator">&amp;</span> SomeContextFlavor<span class="token punctuation">;</span>
<span class="token comment">// API flavoring</span>
<span class="token keyword">type</span> <span class="token class-name">MyApi</span> <span class="token operator">=</span> Api <span class="token operator">&amp;</span> SomeApiFlavor<span class="token punctuation">;</span>

<span class="token comment">// Usa ambos flavors.</span>
<span class="token keyword">const</span> bot <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bot<span class="token operator">&lt;</span>MyContext<span class="token punctuation">,</span> MyApi<span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token string">&quot;my-token&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Usa un plugin.</span>
bot<span class="token punctuation">.</span>api<span class="token punctuation">.</span>config<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">somePlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Ahora llama a \`bot.api\` con los tipos ajustados del API flavor.</span>
bot<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">somePluginMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Tambi\xE9n, usa el tipo de contexto ajustado del context flavor.</span>
bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ctx<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">somePluginMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),G=n("API flavors funcionan exactamente igual que los tipos de context flavors. Existen API flavors aditivos y transformativos, y se pueden combinar m\xFAltiples API flavors de la misma manera que se har\xEDa con context flavors. Si no est\xE1s seguro de c\xF3mo funciona esto, vuelve a la "),J=n("secci\xF3n sobre context flavors"),Q=n(" en la gu\xEDa.");function W(X,Z){const p=c("AutotagPage"),i=c("ExternalLinkIcon"),e=c("RouterLink");return u(),r("div",null,[m,s(p,{config:'[{"url":["/plugins"],"exclude":["console-time","middlewares","autoquote","guide","session","keyboard","/"],"tag":[{"template":"official","text":"OFFICIAL","desc":"This plugin is published and maintained by grammY","locale":{"es":{"text":"OFICIAL","desc":"Este plugin es publicado y mantenido por grammY"},"id":{"text":"RESMI","desc":"Plugin ini dipublikasi dan dikelola oleh grammY"},"zh":{"text":"\u5B98\u65B9\u7EF4\u62A4","desc":"\u8FD9\u4E2A\u63D2\u4EF6\u662F\u7531grammY\u53D1\u5E03\u548C\u7EF4\u62A4\u7684"}}}]},{"url":["/plugins"],"include":["console-time","middlewares","autoquote"],"tag":[{"template":"thirdparty","text":"THIRD-PARTY","desc":"This plugin is maintained by third-party","locale":{"es":{"text":"DE TERCEROS","desc":"Este plugin es mantenido por terceros"},"id":{"text":"PIHAK KETIGA","desc":"Plugin ini dikelola oleh pihak ketiga"},"zh":{"text":"\u7B2C\u4E09\u65B9","desc":"\u8FD9\u4E2A\u63D2\u4EF6\u662F\u7531\u7B2C\u4E09\u65B9\u7EF4\u62A4\u7684"}}}]},{"url":["/hosting"],"exclude":["gcf","comparison"],"tag":[{"template":"deno","desc":"This setup is able to run Deno bots","locale":{"es":{"desc":"Esta configuraci\xF3n es capaz de ejecutar bots Deno"},"id":{"desc":"Konfigurasi ini dapat dijalankan di bot Deno"},"zh":{"desc":"\u8FD9\u4E2A\u8BBE\u7F6E\u80FD\u591F\u8FD0\u884CDeno\u673A\u5668\u4EBA"}}}]},{"url":["/hosting"],"include":["heroku","vps"],"tag":[{"template":"nodejs","desc":"This setup is able to run Node.js bots","locale":{"es":{"desc":"Esta configuraci\xF3n es capaz de ejecutar bots Node.js"},"id":{"desc":"Konfigurasi ini dapat dijalankan di bot Node.js"},"zh":{"desc":"\u8FD9\u4E2A\u8BBE\u7F6E\u80FD\u591F\u8FD0\u884CNode.js\u673A\u5668\u4EBA"}}}]}]'}),k,v,b,a("p",null,[f,h,g,_,x,y,w,a("a",q,[A,s(i)]),j,P,I,E,T]),C,a("p",null,[L,s(e,{to:"/es/plugins/menu.html"},{default:o(()=>[R]),_:1}),z]),a("ul",null,[a("li",null,[S,s(e,{to:"/es/plugins/transformer-throttler.html"},{default:o(()=>[F]),_:1})]),Y,a("li",null,[M,s(e,{to:"/es/plugins/auto-retry.html"},{default:o(()=>[N,D,B]),_:1})])]),O,a("p",null,[K,s(e,{to:"/es/guide/context.html#context-flavors"},{default:o(()=>[V]),_:1}),U]),H,a("p",null,[G,s(e,{to:"/es/guide/context.html#context-flavors"},{default:o(()=>[J]),_:1}),Q])])}const nn=l(d,[["render",W],["__file","transformers.html.vue"]]);export{nn as default};
