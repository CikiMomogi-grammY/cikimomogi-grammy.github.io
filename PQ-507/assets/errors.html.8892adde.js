import{_ as l,r as c,o as i,c as d,b as s,a,w as t,d as n,e}from"./app.9a621f1c.js";const u={},m=a("h1",{id:"manejo-de-errores",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#manejo-de-errores","aria-hidden":"true"},"#"),n(" Manejo de errores")],-1),k=e('<p>Cada uno de los errores causados por tu middleware ser\xE1 capturado por grammY. Deber\xEDas instalar un manejador de errores personalizado para manejar los errores.</p><p>Lo m\xE1s importante, esta secci\xF3n te ense\xF1ar\xE1 <a href="#atrapando-errores">c\xF3mo atrapar errores</a> que pueden ser lanzados.</p><p>Despu\xE9s, veremos los tres tipos de errores que tu bot puede encontrar.</p><table><thead><tr><th>Nombre</th><th>Prop\xF3sito</th></tr></thead><tbody><tr><td><a href="#el-objeto-boterror"><code>Bot<wbr>Error</code></a></td><td>Objeto de error que envuelve cualquier error lanzado en su middleware (por ejemplo, los dos errores siguientes)</td></tr><tr><td><a href="#el-objeto-grammyerror"><code>Grammy<wbr>Error</code></a></td><td>Lanzado si el servidor de la API del Bot devuelve <code>ok:<wbr> false</code>, indicando que su solicitud de la API no era v\xE1lida y fall\xF3</td></tr><tr><td><a href="#el-objeto-httperror"><code>Http<wbr>Error</code></a></td><td>Se lanza si no se puede acceder al servidor de la API del Bot</td></tr></tbody></table><p>Un mecanismo m\xE1s avanzado de manejo de errores se puede encontrar <a href="#error-boundaries">aqu\xED abajo</a>.</p><h2 id="atrapando-errores" tabindex="-1"><a class="header-anchor" href="#atrapando-errores" aria-hidden="true">#</a> Atrapando Errores</h2><p>La forma de capturar los errores depender\xE1 de su configuraci\xF3n.</p><h3 id="long-polling" tabindex="-1"><a class="header-anchor" href="#long-polling" aria-hidden="true">#</a> Long Polling</h3>',8),b=n("Si ejecutas tu bot a trav\xE9s de "),v=a("code",null,[n("bot"),a("wbr"),n(".start()")],-1),h=n(", o si est\xE1s usando "),_=n("grammY runner"),g=n(", entonces deber\xEDas "),f=a("strong",null,[n("instalar un manejador de errores a trav\xE9s de "),a("code",null,[n("bot"),a("wbr"),n(".catch")])],-1),w=n("."),y=e(`<p>grammY tiene instalado un controlador de errores por defecto que detiene el bot si fue iniciado por <code>bot<wbr>.start()</code>. Entonces vuelve a lanzar el error. Depende de la plataforma lo que suceder\xE1 despu\xE9s. Por eso <strong>deber\xEDas instalar un manejador de errores a trav\xE9s de <code>bot<wbr>.catch</code></strong>.</p><p>Ejemplo:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>bot<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> ctx <span class="token operator">=</span> err<span class="token punctuation">.</span>ctx<span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Error mientras manejas el update </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ctx<span class="token punctuation">.</span>update<span class="token punctuation">.</span>update_id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> e <span class="token operator">=</span> err<span class="token punctuation">.</span>error<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token keyword">instanceof</span> <span class="token class-name">GrammyError</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Error en la request:&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>description<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token keyword">instanceof</span> <span class="token class-name">HttpError</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;No se pudo contactar con Telegram:&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Error desconocido:&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="webhooks" tabindex="-1"><a class="header-anchor" href="#webhooks" aria-hidden="true">#</a> Webhooks</h3><p>Si ejecutas tu bot a trav\xE9s de webhooks, grammY pasar\xE1 el error al framework web que utilices, por ejemplo <code>express</code>. Debe manejar los errores de acuerdo con las convenciones de ese framework.</p><h2 id="el-objeto-boterror" tabindex="-1"><a class="header-anchor" href="#el-objeto-boterror" aria-hidden="true">#</a> El Objeto <code>Bot<wbr>Error</code></h2>`,6),E=n("El objeto "),j=a("code",null,[n("Bot"),a("wbr"),n("Error")],-1),q=n(" agrupa un error lanzado con el correspondiente "),x=n("objeto contexto"),z=n(" que caus\xF3 el error. Esto funciona de la siguiente manera."),B=e("<p>Cualquiera que sea el error que se produzca mientras se procesa una actualizaci\xF3n, grammY capturar\xE1 el error lanzado por usted. A menudo es \xFAtil acceder al objeto de contexto que caus\xF3 el error.</p><p>grammY no toca el error lanzado de ninguna manera, sino que lo envuelve en una instancia de <code>Bot<wbr>Error</code>. Dado que ese objeto se llama <code>err</code>, puedes acceder al error original a trav\xE9s de <code>err<wbr>.error</code>. Puedes acceder al objeto de contexto respectivo a trav\xE9s de <code>err<wbr>.ctx</code>.</p>",2),A=n("Consulta la clase "),P=a("code",null,[n("Bot"),a("wbr"),n("Error")],-1),Y=n(" en la "),I={href:"https://doc.deno.land/https://deno.land/x/grammy/mod.ts/~/BotError",target:"_blank",rel:"noopener noreferrer"},H=n("Referencia de la API de grammY"),C=n("."),T=e('<h2 id="el-objeto-grammyerror" tabindex="-1"><a class="header-anchor" href="#el-objeto-grammyerror" aria-hidden="true">#</a> El Objeto <code>Grammy<wbr>Error</code></h2><p>Si un m\xE9todo de la API como <code>send<wbr>Message</code> falla, grammY lanzar\xE1 un <code>Grammy<wbr>Error</code>. Ten en cuenta que tambi\xE9n las instancias de <code>Grammy<wbr>Error</code> se envolver\xE1n en objetos <code>Bot<wbr>Error</code> si se lanzan en el middleware.</p><p>Un <code>Grammy<wbr>Error</code> lanzado indica que la correspondiente solicitud de la API ha fallado. El error proporciona acceso al c\xF3digo de error devuelto por el backend de Telegram, as\xED como a la descripci\xF3n.</p>',3),D=n("Consulta la clase "),N=a("code",null,[n("Grammy"),a("wbr"),n("Error")],-1),L=n(" en la "),R={href:"https://doc.deno.land/https://deno.land/x/grammy/mod.ts/~/GrammyError",target:"_blank",rel:"noopener noreferrer"},G=n("Referencia de la API de grammY"),S=n("."),O=e('<h2 id="el-objeto-httperror" tabindex="-1"><a class="header-anchor" href="#el-objeto-httperror" aria-hidden="true">#</a> El Objeto <code>Http<wbr>Error</code></h2><p>Un <code>Http<wbr>Error</code> es lanzado si una petici\xF3n de red falla. Esto significa que grammY no pudo contactar con el servidor de la API del Bot. El objeto de error contiene informaci\xF3n sobre la raz\xF3n por la que la petici\xF3n fall\xF3, que est\xE1 disponible bajo la propiedad <code>error</code>.</p><p>Raramente ver\xE1s este tipo de error, a menos que tu infraestructura de red sea inestable, o que el servidor del Bot API de tu bot est\xE9 temporalmente fuera de l\xEDnea.</p>',3),F=n("Ten en cuenta que si se puede contactar con el servidor de la API del bot, pero devuelve "),K=a("code",null,[n("ok:"),a("wbr"),n(" false")],-1),V=n(" para una llamada a un m\xE9todo determinado, se lanza un "),M=a("code",null,[n("Grammy"),a("wbr"),n("Error")],-1),Q=n(" en su lugar."),U=n("Consulta la clase "),X=a("code",null,[n("Http"),a("wbr"),n("Error")],-1),Z=n(" en la "),W={href:"https://doc.deno.land/https://deno.land/x/grammy/mod.ts/~/HttpError",target:"_blank",rel:"noopener noreferrer"},$=n("Referencia de la API de grammY"),J=n("."),nn=e(`<h2 id="error-boundaries" tabindex="-1"><a class="header-anchor" href="#error-boundaries" aria-hidden="true">#</a> Error Boundaries</h2><blockquote><p>Este es un tema avanzado que es principalmente \xFAtil para los bots m\xE1s grandes. Si eres relativamente nuevo en grammY, simplemente salta el resto de esta secci\xF3n.</p></blockquote><p>Si divides tu base de c\xF3digo en diferentes partes, los <em>error boundaries</em> te permiten instalar diferentes manejadores de error para diferentes partes de tu middleware. Logran esto al permitirte cercar los errores en una parte de tu middleware. En otras palabras, si un error es lanzado en una parte especialmente protegida del middleware, no ser\xE1 capaz de escapar de esa parte del sistema de middleware. En su lugar, se invoca un manejador de errores dedicado, y la parte rodeada del middleware pretende completar con \xE9xito. Esta es una caracter\xEDstica del sistema de middleware de grammY, por lo que los l\xEDmites de error no se preocupan de si est\xE1s ejecutando tu bot con webhooks o con un sondeo largo.</p><p>Opcionalmente, puedes elegir dejar que la ejecuci\xF3n del middleware se reanude normalmente despu\xE9s de que el error haya sido manejado, continuando justo fuera del l\xEDmite de error. En ese caso, el middleware vallado no s\xF3lo act\xFAa como si se hubiera completado con \xE9xito, sino que tambi\xE9n pasa el flujo de control al siguiente middleware que se instal\xF3 despu\xE9s del l\xEDmite del error. As\xED, parece que el middleware dentro del l\xEDmite de error ha llamado a <code>next</code>.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> bot <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bot</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

bot<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token comment">/* A */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
bot<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token comment">/* B */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> composer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Composer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
composer<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token comment">/* X */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
composer<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token comment">/* Y */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
composer<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token comment">/* Z */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
bot<span class="token punctuation">.</span><span class="token function">errorBoundary</span><span class="token punctuation">(</span>boundaryHandler <span class="token comment">/* , Q */</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>composer<span class="token punctuation">)</span><span class="token punctuation">;</span>

bot<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token comment">/* C */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
bot<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token comment">/* D */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

bot<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>errorHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">boundaryHandler</span><span class="token punctuation">(</span>err<span class="token operator">:</span> BotError<span class="token punctuation">,</span> next<span class="token operator">:</span> NextFunction<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Error en Q, X, Y, or Z!&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">/*
   * Puedes llamar a \`next\` si quieres ejecutar
   * el middleware en C en caso de error:
   */</span>
  <span class="token comment">// await next()</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">errorHandler</span><span class="token punctuation">(</span>err<span class="token operator">:</span> BotError<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Error en A, B, C, or D!&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>En el ejemplo anterior, el <code>boundary<wbr>Handler</code> ser\xE1 invocado para</p><ol><li>todos los middlewares que se pasan a <code>bot<wbr>.error<wbr>Boundary</code> despu\xE9s de <code>boundary<wbr>Handler</code> (es decir, <code>Q</code>), y</li><li>todos los middlewares que se instalan en las instancias de compositor instaladas posteriormente (es decir, <code>X</code>, <code>Y</code> y <code>Z</code>).</li></ol>`,7),an=n("En cuanto al punto 2, es posible que desee saltar a la "),sn=n("explicaci\xF3n avanzada"),en=n(" de middleware para aprender c\xF3mo funciona el encadenamiento en grammY."),on=e(`<p>Tambi\xE9n se puede aplicar un l\xEDmite de error a un compositor sin llamar a <code>bot<wbr>.error<wbr>Boundary</code>:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> composer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Composer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token keyword">protected</span> <span class="token operator">=</span> composer<span class="token punctuation">.</span><span class="token function">errorBoundary</span><span class="token punctuation">(</span>boundaryHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">protected</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token comment">/* B */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

bot<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>composer<span class="token punctuation">)</span><span class="token punctuation">;</span>
bot<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token comment">/* C */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

bot<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>errorHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">boundaryHandler</span><span class="token punctuation">(</span>err<span class="token operator">:</span> BotError<span class="token punctuation">,</span> next<span class="token operator">:</span> NextFunction<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Error in B!&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">errorHandler</span><span class="token punctuation">(</span>err<span class="token operator">:</span> BotError<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Error in C!&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>El <code>boundary<wbr>Handler</code> del ejemplo anterior ser\xE1 invocado para los middlewares vinculados a <code>protected</code>.</p><p>Si quieres activamente que el error cruce un l\xEDmite (es decir, pasarlo fuera), puedes volver a lanzar el error dentro de tu manejador de errores. El error ser\xE1 entonces pasado a la siguiente frontera circundante.</p><p>En cierto sentido, puedes considerar el manejador de errores instalado a trav\xE9s de <code>bot<wbr>.catch</code> como el l\xEDmite de error m\xE1s externo.</p>`,5);function tn(rn,cn){const p=c("AutotagPage"),o=c("RouterLink"),r=c("ExternalLinkIcon");return i(),d("div",null,[m,s(p,{config:'[{"url":["/plugins"],"exclude":["console-time","middlewares","autoquote","guide","session","keyboard","/"],"tag":[{"template":"official","text":"OFFICIAL","desc":"This plugin is published and maintained by grammY","locale":{"es":{"text":"OFICIAL","desc":"Este plugin es publicado y mantenido por grammY"},"id":{"text":"RESMI","desc":"Plugin ini dipublikasi dan dikelola oleh grammY"},"zh":{"text":"\u5B98\u65B9\u7EF4\u62A4","desc":"\u8FD9\u4E2A\u63D2\u4EF6\u662F\u7531grammY\u53D1\u5E03\u548C\u7EF4\u62A4\u7684"}}}]},{"url":["/plugins"],"include":["console-time","middlewares","autoquote"],"tag":[{"template":"thirdparty","text":"THIRD-PARTY","desc":"This plugin is maintained by third-party","locale":{"es":{"text":"DE TERCEROS","desc":"Este plugin es mantenido por terceros"},"id":{"text":"PIHAK KETIGA","desc":"Plugin ini dikelola oleh pihak ketiga"},"zh":{"text":"\u7B2C\u4E09\u65B9","desc":"\u8FD9\u4E2A\u63D2\u4EF6\u662F\u7531\u7B2C\u4E09\u65B9\u7EF4\u62A4\u7684"}}}]},{"url":["/hosting"],"exclude":["gcf","comparison"],"tag":[{"template":"deno","desc":"This setup is able to run Deno bots","locale":{"es":{"desc":"Esta configuraci\xF3n es capaz de ejecutar bots Deno"},"id":{"desc":"Konfigurasi ini dapat dijalankan di bot Deno"},"zh":{"desc":"\u8FD9\u4E2A\u8BBE\u7F6E\u80FD\u591F\u8FD0\u884CDeno\u673A\u5668\u4EBA"}}}]},{"url":["/hosting"],"include":["heroku","vps"],"tag":[{"template":"nodejs","desc":"This setup is able to run Node.js bots","locale":{"es":{"desc":"Esta configuraci\xF3n es capaz de ejecutar bots Node.js"},"id":{"desc":"Konfigurasi ini dapat dijalankan di bot Node.js"},"zh":{"desc":"\u8FD9\u4E2A\u8BBE\u7F6E\u80FD\u591F\u8FD0\u884CNode.js\u673A\u5668\u4EBA"}}}]}]'}),k,a("p",null,[b,v,h,s(o,{to:"/es/plugins/runner.html"},{default:t(()=>[_]),_:1}),g,f,w]),y,a("p",null,[E,j,q,s(o,{to:"/es/guide/context.html"},{default:t(()=>[x]),_:1}),z]),B,a("p",null,[A,P,Y,a("a",I,[H,s(r)]),C]),T,a("p",null,[D,N,L,a("a",R,[G,s(r)]),S]),O,a("blockquote",null,[a("p",null,[F,K,V,s(o,{to:"/es/guide/errors.html#el-objeto-grammyerror"},{default:t(()=>[M]),_:1}),Q])]),a("p",null,[U,X,Z,a("a",W,[$,s(r)]),J]),nn,a("blockquote",null,[a("p",null,[an,s(o,{to:"/es/advanced/middleware.html"},{default:t(()=>[sn]),_:1}),en])]),on])}const ln=l(u,[["render",tn],["__file","errors.html.vue"]]);export{ln as default};
