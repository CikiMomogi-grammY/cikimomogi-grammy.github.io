import{_ as r,r as p,o as d,c as k,b as s,a as n,w as e,d as a,e as t}from"./app.9837a88d.js";const m={},b=n("h1",{id:"context",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#context","aria-hidden":"true"},"#"),a(" Context")],-1),g=a("Object "),h=n("code",null,"Context",-1),v=a(" ("),y={href:"https://doc.deno.land/https://deno.land/x/grammy/mod.ts/~/Context",target:"_blank",rel:"noopener noreferrer"},_=a("Referensi API grammY"),x=a(") merupakan komponen penting di grammY."),f=t('<p>Setiap kali kamu menambahkan listener ke object bot, listener ini akan menerima sebuah object context.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// Ini adalah listener atau penyimak. Tugasnya menyimak pesan masuk.</span>\nbot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// `ctx` adalah object `Context`.</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Kamu bisa menggunakan object context untuk:</p><ul><li><a href="#informasi-yang-tersedia">Mengakses informasi tentang pesan tersebut</a>,</li><li><a href="#aksi-yang-tersedia">Merespon pesan yang diterima</a>.</li></ul><p>Harap diketahui bahwa object context biasanya disebut <code>ctx</code>.</p><h2 id="informasi-yang-tersedia" tabindex="-1"><a class="header-anchor" href="#informasi-yang-tersedia" aria-hidden="true">#</a> Informasi yang Tersedia</h2><p>Ketika pengguna mengirim pesan ke bot, kamu dapat mengakses pesan itu melalui <code>ctx<wbr>.message</code>. Sebagai contoh, untuk mendapatkan pesan teks, kamu dapat melakukan ini:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// `txt` akan memiliki type `string` ketika memproses pesan berjenis teks.</span>\n  <span class="token comment">// Atau bisa juga menjadi type `undefined` jika pesan tidak memiliki teks sama sekali,</span>\n  <span class="token comment">// Misalnya foto, stiker, dan jenis pesan lainnya.</span>\n  <span class="token keyword">const</span> txt <span class="token operator">=</span> ctx<span class="token punctuation">.</span>message<span class="token punctuation">.</span>text<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',8),w=a("Kamu juga dapat mengakses property lain dari object message, misal "),j=n("code",null,[a("ctx"),n("wbr"),a(".message"),n("wbr"),a(".chat")],-1),C=a(" untuk memperoleh informasi dari suatu chat asal pesan tersebut dikirim. Lihat bagian "),M=n("code",null,"Message",-1),q=a(" di "),T={href:"https://core.telegram.org/bots/api#message",target:"_blank",rel:"noopener noreferrer"},B=a("Referensi API Bot Telegram"),P=a(" untuk mengetahui data apa saja yang tersedia. Cara lainnya, kamu dapat dengan mudah menggunakan auto-complete di code editor untuk menelusuri pilihan-pilihan yang tersedia."),D=t(`<p>Kalau kamu memasang listener untuk jenis pesan lainnya, <code>ctx</code> juga akan memberi informasi sesuai dengan jenis pesan tersebut. Contoh:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;edited_message&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Mendapatkan isi pesan baru yang diedit.</span>
  <span class="token keyword">const</span> teksPesan <span class="token operator">=</span> ctx<span class="token punctuation">.</span>editedMessage<span class="token punctuation">.</span>text<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),S=a("Bahkan, kamu bisa mengakses raw object dari sebuah "),E=n("code",null,"Update",-1),A=a(" yang dikirimkan Telegram ke bot-mu ("),F={href:"https://core.telegram.org/bots/api#update",target:"_blank",rel:"noopener noreferrer"},I=a("Referensi Bot API Telegram"),O=a("). Object update ini ("),K=n("code",null,[a("ctx"),n("wbr"),a(".update")],-1),R=a(") berisi data induk yang menjadi rujukan "),L=n("code",null,[a("ctx"),n("wbr"),a(".message")],-1),U=a(" dan sejenisnya."),G=t(`<p>Object context selalu berisi informasi tentang bot-mu, yang dapat diakses melalui <code>ctx<wbr>.me</code>.</p><h3 id="shortcut" tabindex="-1"><a class="header-anchor" href="#shortcut" aria-hidden="true">#</a> Shortcut</h3><p>Ada sejumlah shortcut yang tersedia untuk object context.</p><table><thead><tr><th>Shortcut</th><th>Deskripsi</th></tr></thead><tbody><tr><td><code>ctx<wbr>.msg</code></td><td>Mendapatkan object message, termasuk yang sudah diedit</td></tr><tr><td><code>ctx<wbr>.chat</code></td><td>Mendapatkan object chat</td></tr><tr><td><code>ctx<wbr>.sender<wbr>Chat</code></td><td>Mendapatkan object chat pengirim dari <code>ctx<wbr>.msg</code> (untuk pesan grup/channel anonim)</td></tr><tr><td><code>ctx<wbr>.from</code></td><td>Mendapatkan informasi penulis pesan, callback query, dan lainnya</td></tr><tr><td><code>ctx<wbr>.inline<wbr>Message<wbr>Id</code></td><td>Mendapatkan id pesan inline dari callback query atau hasil inline yang dipilih</td></tr></tbody></table><p>Dengan kata lain, kamu juga bisa melakukan ini:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Mendapatkan isi teks pesan.</span>
  <span class="token keyword">const</span> teks <span class="token operator">=</span> ctx<span class="token punctuation">.</span>msg<span class="token punctuation">.</span>text<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;edited_message&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Mendapatkan isi teks pesan yang diedit.</span>
  <span class="token keyword">const</span> teks <span class="token operator">=</span> ctx<span class="token punctuation">.</span>msg<span class="token punctuation">.</span>text<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Bahkan, jika mau, kamu bisa mengabaikan <code>ctx<wbr>.message</code>, <code>ctx<wbr>.channel<wbr>Post</code>, <code>ctx<wbr>.edited<wbr>Message</code> dan seterusnya, cukup gunakan <code>ctx<wbr>.msg</code> saja.</p><h2 id="pemeriksaan-melalui-has-checks" tabindex="-1"><a class="header-anchor" href="#pemeriksaan-melalui-has-checks" aria-hidden="true">#</a> Pemeriksaan Melalui Has Checks</h2><p>Context object memiliki beberapa method yang bisa kamu gunakan untuk memeriksa data yang ada di dalamnya. Contohnya, kamu bisa memanggil <code>ctx<wbr>.has<wbr>Command(&quot;start&quot;)</code> untuk memeriksa apakah context object tersebut terdapat sebuah command <code>/start</code>. Itulah kenapa method ini dinamakan <em>has checks</em>.</p>`,9),H={class:"custom-container tip"},J=n("p",{class:"custom-container-title"},"Kapan Waktu yang Tepat untuk Menggunakan Has Checks?",-1),V=a("Method ini menggunakan logika yang sama yang digunakan oleh "),Y=n("code",null,[a("bot"),n("wbr"),a('.command("start")')],-1),N=a(". Kami menyarankan kamu untuk selalu menggunakan "),z=a("filter queries"),Q=a(" dan method-method lain yang serupa. has checks sebaiknya digunakan di "),X=a("plugin conversations"),Z=a("."),W=t(`<p>has checks secara tepat mengerucutkan type context terkait. Artinya, ia melakukan pengecekan apakah suatu context berisi data callback query. Jika ditemukan, TypeScript akan diberitahu bahwa context tersebut memiliki field <code>ctx<wbr>.callback<wbr>Query<wbr>.data</code> di dalamnya.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">.</span><span class="token function">hasCallbackQuery</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">query-data-\\d+</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \`ctx.callbackQuery.data\` ditemukan</span>
  <span class="token keyword">const</span> data<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>callbackQuery<span class="token punctuation">.</span>data<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),$=a("Hal yang sama juga berlaku untuk has checks lainnya. Lihat "),nn={href:"https://doc.deno.land/https://deno.land/x/grammy/mod.ts/~/Context#has",target:"_blank",rel:"noopener noreferrer"},an=a("referensi API context object"),sn=a(" untuk mengetahui semua has checks yang tersedia. Selain itu, lihat juga "),en={href:"https://doc.deno.land/https://deno.land/x/grammy/mod.ts/~/Context#Static_Properties",target:"_blank",rel:"noopener noreferrer"},tn=a("referensi API"),on=a(" untuk static property "),cn=n("code",null,[a("Context"),n("wbr"),a(".has")],-1),pn=a(" yang bisa kamu gunakan untuk membuat predicate function memeriksa beberapa context object secara efisien."),ln=t(`<h2 id="aksi-yang-tersedia" tabindex="-1"><a class="header-anchor" href="#aksi-yang-tersedia" aria-hidden="true">#</a> Aksi yang Tersedia</h2><p>Jika ingin menanggapi pesan pengguna, kamu bisa menuliskan ini:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Mendapatkan id chat.</span>
  <span class="token keyword">const</span> idChat <span class="token operator">=</span> ctx<span class="token punctuation">.</span>msg<span class="token punctuation">.</span>chat<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
  <span class="token comment">// Teks yang akan dikirim.</span>
  <span class="token keyword">const</span> teks <span class="token operator">=</span> <span class="token string">&quot;Pesanmu sudah kuterima!&quot;</span><span class="token punctuation">;</span>
  <span class="token comment">// Kirim balasan.</span>
  <span class="token keyword">await</span> bot<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span>idChat<span class="token punctuation">,</span> teks<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Kalau diperhatikan, kamu bisa mencermati ada dua hal yang tidak optimal dari kode tersebut:</p><ol><li>Kita harus memiliki akses ke object <code>bot</code>. Berarti, untuk merespon pesan, kita harus meneruskan object <code>bot</code> ke seluruh bagian kode. Cukup merepotkan ketika kita memiliki lebih dari satu file source code dan memasang listener yang tersebar di berbagai tempat.</li><li>Kita perlu mengambil id chat dari context tersebut, lalu meneruskannya kembali ke <code>send<wbr>Message</code>. Hal ini tentu merepotkan juga, karena kemungkinan besar kamu selalu ingin merespon ke pengguna yang sama yang telah mengirim pesan itu. Bayangkan betapa seringnya kamu mengetik hal yang sama berulang-ulang!</li></ol><p>Mengenai poin 1, object context sudah menyediakan akses ke object API yang sama dengan yang kamu temukan di <code>bot<wbr>.api</code>, yang disebut <code>ctx<wbr>.api</code>. Kamu sekarang bisa menulis <code>ctx<wbr>.api<wbr>.send<wbr>Message</code> sebagai gantinya dan tidak perlu lagi meneruskannya ke objek <code>bot</code>. Mudah, bukan?</p><p>Tetapi, kehebatan sesungguhnya adalah dalam mengatasi poin 2. Object context memungkinkan kamu mengirim balasan sesederhana ini:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&quot;Pesanmu sudah kuterima!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Atau bahkan lebih singkat lagi:</span>
bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&quot;Ok. Diterima, Bos!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Mantap! \u{1F389}</p><p>Di balik layar, context <em>sudah tahu id chat pesan tersebut</em>, yaitu <code>ctx<wbr>.msg<wbr>.chat<wbr>.id</code>. Jadi, ia hanya perlu menyediakan method <code>reply</code> untuk mengirim pesan kembali ke chat yang sama. Untuk melakukannya, <code>reply</code> memanggil kembali <code>send<wbr>Message</code> dengan id chat yang sudah terisi sebelumnya. Sehingga, kamu tidak perlu menuliskan id chat lagi.</p>`,10),un=a("Efeknya, semua method pada object context sekarang bisa menggunakan opsi-opsi dari object type "),rn=n("code",null,"Other",-1),dn=a(", seperti yang sudah dijelaskan "),kn=a("sebelumnya"),mn=a(". Opsi ini dapat digunakan untuk memasukkan konfigurasi lebih lanjut ke setiap pemanggilan API."),bn={class:"custom-container tip"},gn=n("p",{class:"custom-container-title"},"Fitur Reply Telegram",-1),hn=a("Meskipun method ini disebut "),vn=n("code",null,[a("ctx"),n("wbr"),a(".reply")],-1),yn=a(" di grammY (dan juga di kebanyakan framework lainnya), ia tidak menggunakan "),_n={href:"https://telegram.org/blog/replies-mentions-hashtags#replies",target:"_blank",rel:"noopener noreferrer"},xn=a("fitur reply dari Telegram"),fn=a(" dimana pesan sebelumnya terhubung satu sama lain. Lihat "),wn=a("materi sebelumnya"),jn=a(" mengenai fitur reply."),Cn=a("Kalau kamu membaca "),Mn={href:"https://core.telegram.org/bots/api#sendmessage",target:"_blank",rel:"noopener noreferrer"},qn=a("Referensi API Bot Telegram"),Tn=t(", di situ terdapat sejumlah opsi, seperti <code>parse<wbr>_mode</code>, <code>disable<wbr>_web<wbr>_page<wbr>_preview</code>, dan <code>reply<wbr>_to<wbr>_message<wbr>_id</code>. Nah, yang opsi terakhir ini bisa digunakan untuk membuat pesan menjadi sebuah reply:",7),Bn=t(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&quot;^ Aku me-reply pesan ini!&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  reply_to_message_id<span class="token operator">:</span> ctx<span class="token punctuation">.</span>msg<span class="token punctuation">.</span>message_id<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Opsi object yang sama dapat juga digunakan di <code>bot<wbr>.api<wbr>.send<wbr>Message</code> dan <code>ctx<wbr>.api<wbr>.send<wbr>Message</code>. Gunakan auto-complete untuk melihat opsi yang tersedia langsung di code editor.</p>`,2),Pn=t("Umumnya, setiap method di <code>ctx<wbr>.api</code> memiliki shortcut dengan nilai yang sudah terisi sebelumnya, seperti <code>ctx<wbr>.reply<wbr>With<wbr>Photo</code> untuk membalas menggunakan foto, atau <code>ctx<wbr>.export<wbr>Chat<wbr>Invite<wbr>Link</code> untuk mendapatkan link undangan chat yang bersangkutan. Jika ingin tahu pintasan apa saja yang tersedia, auto-complete beserta ",7),Dn={href:"https://doc.deno.land/https://deno.land/x/grammy/mod.ts/~/Context",target:"_blank",rel:"noopener noreferrer"},Sn=a("Referensi API grammY"),En=a(" adalah kawan baikmu."),An=t('<p>Harap dicatat bahwa mungkin adakalanya kamu tidak ingin merespon ke chat yang sama. Untuk itu, kamu bisa kembali menggunakan method <code>ctx<wbr>.api</code>, lalu menentukan sendiri opsi-opsinya. Sebagai contoh, jika kamu menerima pesan dari Ani lalu hendak meresponnya dengan mengirim pesan ke Budi, maka kamu tidak dapat menggunakan <code>ctx<wbr>.reply</code> karena method ini akan selalu mengirim pesan ke Ani. Sebagai gantinya, gunakan <code>ctx<wbr>.api<wbr>.send<wbr>Message</code> lalu tentukan id chat milik Budi.</p><h2 id="bagaimana-object-context-dibuat" tabindex="-1"><a class="header-anchor" href="#bagaimana-object-context-dibuat" aria-hidden="true">#</a> Bagaimana Object Context Dibuat</h2>',2),Fn=a("Setiap kali bot menerima pesan baru dari Telegram, pesan tersebut dibungkus dalam sebuah object update. Bahkan, object update tidak hanya berisi pesan baru, tetapi juga hal-hal lain, seperti pengeditan pesan, jawaban polling, dan "),In={href:"https://core.telegram.org/bots/api#update",target:"_blank",rel:"noopener noreferrer"},On=a("banyak lagi"),Kn=a("."),Rn=n("p",null,[a("Untuk setiap update yang masuk, akan dibuatkan persis satu object context baru. Sehingga, context untuk update yang berbeda adalah object yang tidak saling berkaitan. Mereka hanya mereferensikan informasi bot yang sama melalui "),n("code",null,[a("ctx"),n("wbr"),a(".me")]),a(".")],-1),Ln=a("Object context yang sama untuk satu update akan didistribusikan ke semua "),Un=a("middleware"),Gn=a(" bot."),Hn=n("h2",{id:"memodifikasi-object-context",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#memodifikasi-object-context","aria-hidden":"true"},"#"),a(" Memodifikasi Object Context")],-1),Jn=n("blockquote",null,[n("p",null,"Jika kamu masih asing dengan object context, tak perlu risau memikirkan sisa dari halaman ini. Langsung di-skip saja.")],-1),Vn=n("p",null,"Kamu dapat memasang property punyamu sendiri ke sebuah object context.",-1),Yn=n("h3",{id:"melalui-middleware-direkomendasikan",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#melalui-middleware-direkomendasikan","aria-hidden":"true"},"#"),a(" Melalui Middleware (Direkomendasikan)")],-1),Nn=a("Modifikasi bisa dilakukan dengan mudah melalui "),zn=a("middleware"),Qn=a("."),Xn={class:"custom-container tip"},Zn=n("p",{class:"custom-container-title"},"Middleware? Tupperware jenis apa, tuh?",-1),Wn=a("Materi ini memerlukan pemahaman yang baik mengenai middleware. Jika kamu belum membaca "),$n=a("materi middleware"),na=a(", berikut ringkasan singkatnya."),aa=n("p",null,[a("Perlu kamu ketahui bahwa beberapa handler mampu memproses object context yang sama. Ada juga sebuah handler khusus yang berfungsi untuk memodifikasi "),n("code",null,"ctx"),a(" sebelum handler-handler lain dijalankan. Hasil modifikasi tersebut akan digunakan oleh handler-handler berikutnya.")],-1),sa=t(`<p>Idenya adalah kamu perlu memasang middleware terlebih dahulu sebelum listener-listener dijalankan. Dengan begitu, kamu bisa menentukan berbagai property yang diinginkan di dalam handler-handler tadi.</p><p>Sebagai ilustrasi, katakanlah kamu hendak mengatur property <code>ctx<wbr>.config</code> dari object context. Di contoh berikut, kamu akan menggunakannya untuk menyimpan beberapa konfigurasi, dengan tujuan agar semua handler bisa mengaksesnya. Konfigurasi tersebut akan mempermudah bot untuk mendeteksi apakah pesan dikirim oleh pengguna biasa atau developer bot itu sendiri.</p><p>Tepat sesudah membuat bot, lakukan hal ini:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token constant">BOT_DEVELOPER</span> <span class="token operator">=</span> <span class="token number">123456</span><span class="token punctuation">;</span> <span class="token comment">// Id chat developer si pembuat bot</span>

bot<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> next<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Modifikasi object context dengan mengatur config-nya.</span>
  ctx<span class="token punctuation">.</span>config <span class="token operator">=</span> <span class="token punctuation">{</span>
    botDeveloper<span class="token operator">:</span> <span class="token constant">BOT_DEVELOPER</span><span class="token punctuation">,</span>
    isDeveloper<span class="token operator">:</span> ctx<span class="token punctuation">.</span>from<span class="token operator">?.</span>id <span class="token operator">===</span> <span class="token constant">BOT_DEVELOPER</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">// Jalankan handler-handler selanjutnya.</span>
  <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Setelah itu, kamu bisa menggunakan <code>ctx<wbr>.config</code> di handler lain.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>bot<span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&quot;start&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Gunakan context hasil modifikasi di sini!</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>config<span class="token punctuation">.</span>isDeveloper<span class="token punctuation">)</span> <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&quot;Selamat datang, Tuanku!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">else</span> <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&quot;Halo, aku adalah bot!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Sayangnya, TypeScript tidak mengetahui kalau <code>ctx<wbr>.config</code> telah dimodifikasi meski kamu sudah memasukkan property dengan benar. Akibatnya, meskipun kode akan bekerja di runtime, tetapi ia tidak bisa di-compile. Untuk mengatasinya kamu perlu menentukan type context beserta property-nya.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">BotConfig</span> <span class="token punctuation">{</span>
  botDeveloper<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  isDeveloper<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">MyContext</span> <span class="token operator">=</span> Context <span class="token operator">&amp;</span> <span class="token punctuation">{</span>
  config<span class="token operator">:</span> BotConfig<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Type baru <code>My<wbr>Context</code> sekarang secara akurat mendeskripsikan object context bot kamu.</p><blockquote><p>Pastikan type yang dibuat sesuai dengan property-property yang kamu gunakan!</p></blockquote><p>Kamu bisa menggunakan type baru dengan memasangnya ke constructor <code>Bot</code>.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> bot <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bot<span class="token operator">&lt;</span>MyContext<span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token string">&quot;&lt;token_bot_kamu&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Hasil akhirnya menjadi seperti ini:</p>`,13),ea=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"const"),a(),n("span",{class:"token constant"},"BOT_DEVELOPER"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token number"},"123456"),n("span",{class:"token punctuation"},";"),a(),n("span",{class:"token comment"},"// Id chat developer"),a(`

`),n("span",{class:"token comment"},"// Tentukan type context hasil modifikasi."),a(`
`),n("span",{class:"token keyword"},"interface"),a(),n("span",{class:"token class-name"},"BotConfig"),a(),n("span",{class:"token punctuation"},"{"),a(`
  botDeveloper`),n("span",{class:"token operator"},":"),a(),n("span",{class:"token builtin"},"number"),n("span",{class:"token punctuation"},";"),a(`
  isDeveloper`),n("span",{class:"token operator"},":"),a(),n("span",{class:"token builtin"},"boolean"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token keyword"},"type"),a(),n("span",{class:"token class-name"},"MyContext"),a(),n("span",{class:"token operator"},"="),a(" Context "),n("span",{class:"token operator"},"&"),a(),n("span",{class:"token punctuation"},"{"),a(`
  config`),n("span",{class:"token operator"},":"),a(" BotConfig"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),a(`

`),n("span",{class:"token keyword"},"const"),a(" bot "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token keyword"},"new"),a(),n("span",{class:"token class-name"},[a("Bot"),n("span",{class:"token operator"},"<"),a("MyContext"),n("span",{class:"token operator"},">")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"<token_bot_kamu>"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

`),n("span",{class:"token comment"},"// Atur property yang diinginkan di object context."),a(`
bot`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"use"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"async"),a(),n("span",{class:"token punctuation"},"("),a("ctx"),n("span",{class:"token punctuation"},","),a(" next"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  ctx`),n("span",{class:"token punctuation"},"."),a("config "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token punctuation"},"{"),a(`
    botDeveloper`),n("span",{class:"token operator"},":"),a(),n("span",{class:"token constant"},"BOT_DEVELOPER"),n("span",{class:"token punctuation"},","),a(`
    isDeveloper`),n("span",{class:"token operator"},":"),a(" ctx"),n("span",{class:"token punctuation"},"."),a("from"),n("span",{class:"token operator"},"?."),a("id "),n("span",{class:"token operator"},"==="),a(),n("span",{class:"token constant"},"BOT_DEVELOPER"),n("span",{class:"token punctuation"},","),a(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token keyword"},"await"),a(),n("span",{class:"token function"},"next"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

`),n("span",{class:"token comment"},"// Gunakan object context modifikasi ke handler terkait."),a(`
bot`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"command"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"start"'),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token keyword"},"async"),a(),n("span",{class:"token punctuation"},"("),a("ctx"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token keyword"},"if"),a(),n("span",{class:"token punctuation"},"("),a("ctx"),n("span",{class:"token punctuation"},"."),a("config"),n("span",{class:"token punctuation"},"."),a("isDeveloper"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token keyword"},"await"),a(" ctx"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"reply"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Selamat datang, Tuanku!"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token keyword"},"else"),a(),n("span",{class:"token keyword"},"await"),a(" ctx"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"reply"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Halo, aku adalah bot!"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),ta=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"const"),a(),n("span",{class:"token constant"},"BOT_DEVELOPER"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token number"},"123456"),n("span",{class:"token punctuation"},";"),a(),n("span",{class:"token comment"},"// Id chat developer"),a(`

`),n("span",{class:"token keyword"},"const"),a(" bot "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token keyword"},"new"),a(),n("span",{class:"token class-name"},"Bot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"<token_bot_kamu>"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

`),n("span",{class:"token comment"},"// Atur property yang diinginkan di object context."),a(`
bot`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"use"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"async"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[a("ctx"),n("span",{class:"token punctuation"},","),a(" next")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  ctx`),n("span",{class:"token punctuation"},"."),a("config "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token literal-property property"},"botDeveloper"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token constant"},"BOT_DEVELOPER"),n("span",{class:"token punctuation"},","),a(`
    `),n("span",{class:"token literal-property property"},"isDeveloper"),n("span",{class:"token operator"},":"),a(" ctx"),n("span",{class:"token punctuation"},"."),a("from"),n("span",{class:"token operator"},"?."),a("id "),n("span",{class:"token operator"},"==="),a(),n("span",{class:"token constant"},"BOT_DEVELOPER"),n("span",{class:"token punctuation"},","),a(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token keyword"},"await"),a(),n("span",{class:"token function"},"next"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

`),n("span",{class:"token comment"},"// Gunakan object context modifikasi ke handler terkait."),a(`
bot`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"command"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"start"'),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token keyword"},"async"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"ctx"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token keyword"},"if"),a(),n("span",{class:"token punctuation"},"("),a("ctx"),n("span",{class:"token punctuation"},"."),a("config"),n("span",{class:"token punctuation"},"."),a("isDeveloper"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token keyword"},"await"),a(" ctx"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"reply"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Selamat datang, Tuanku!"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token keyword"},"else"),a(),n("span",{class:"token keyword"},"await"),a(" ctx"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"reply"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Halo, aku adalah bot!"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),oa=a("Type context modifikasi juga bisa diteruskan ke komponen lain yang menangani middleware, contohnya "),ia={href:"https://doc.deno.land/https://deno.land/x/grammy/mod.ts/~/Composer",target:"_blank",rel:"noopener noreferrer"},ca=a("composer"),pa=a("."),la=t(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> composer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Composer<span class="token operator">&lt;</span>MyContext<span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),ua=a("Beberapa plugin juga mengharuskan kamu menentukan type context modifikasi, contohnya plugin "),ra=a("router"),da=a(" dan plugin "),ka=a("menu"),ma=a(". Type semacam ini dinamakan dengan "),ba=n("em",null,"context flavor",-1),ga=a(", seperti yang dijelaskan "),ha=n("a",{href:"#context-flavor"},"di bawah sini",-1),va=a("."),ya=t(`<h3 id="melalui-inheritance" tabindex="-1"><a class="header-anchor" href="#melalui-inheritance" aria-hidden="true">#</a> Melalui Inheritance</h3><p>Cara lain untuk memodifikasi property object context adalah dengan membuat subclass dari class <code>Context</code>.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">MyContext</span> <span class="token keyword">extends</span> <span class="token class-name">Context</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Meski bisa dilakukan, kami lebih merekomendasikan untuk memodifikasi object context <a href="#melalui-middleware-direkomendasikan">melalui middleware</a>, karena ia lebih fleksibel dan bekerja lebih baik ketika dipasang plugin.</p><p>Sekarang, kita akan lihat bagaimana caranya.</p><p>Ketika membuat bot, kamu bisa meneruskan constructor context hasil modifikasi yang nantinya akan digunakan untuk membuat object context.</p><p>Ingat! Class kamu harus meng-extend <code>Context</code>.</p>`,7),_a=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" Bot"),n("span",{class:"token punctuation"},","),a(" Context "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},'"grammy"'),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token keyword"},"type"),a(),n("span",{class:"token punctuation"},"{"),a(" Update"),n("span",{class:"token punctuation"},","),a(" UserFromGetMe "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},'"@grammyjs/types"'),n("span",{class:"token punctuation"},";"),a(`

`),n("span",{class:"token comment"},"// Definisikan class context khusus."),a(`
`),n("span",{class:"token keyword"},"class"),a(),n("span",{class:"token class-name"},"MyContext"),a(),n("span",{class:"token keyword"},"extends"),a(),n("span",{class:"token class-name"},"Context"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// Tentukan property yang diinginkan."),a(`
  `),n("span",{class:"token keyword"},"public"),a(),n("span",{class:"token keyword"},"readonly"),a(" customProp"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token builtin"},"number"),n("span",{class:"token punctuation"},";"),a(`

  `),n("span",{class:"token function"},"constructor"),n("span",{class:"token punctuation"},"("),a("update"),n("span",{class:"token operator"},":"),a(" Update"),n("span",{class:"token punctuation"},","),a(" api"),n("span",{class:"token operator"},":"),a(" Api"),n("span",{class:"token punctuation"},","),a(" me"),n("span",{class:"token operator"},":"),a(" UserFromGetMe"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"super"),n("span",{class:"token punctuation"},"("),a("update"),n("span",{class:"token punctuation"},","),a(" api"),n("span",{class:"token punctuation"},","),a(" me"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),a("customProp "),n("span",{class:"token operator"},"="),a(" me"),n("span",{class:"token punctuation"},"."),a("username"),n("span",{class:"token punctuation"},"."),a("length "),n("span",{class:"token operator"},"*"),a(),n("span",{class:"token number"},"42"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token comment"},"// Masukkan constructor class context modifikasi sebagai sebuah opsi."),a(`
`),n("span",{class:"token keyword"},"const"),a(" bot "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token keyword"},"new"),a(),n("span",{class:"token class-name"},"Bot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"<token>"'),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token punctuation"},"{"),a(`
  ContextConstructor`),n("span",{class:"token operator"},":"),a(" MyContext"),n("span",{class:"token punctuation"},","),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

bot`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"on"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"message"'),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token punctuation"},"("),a("ctx"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// `ctx` sekarang mempunyai type `MyContext`!"),a(`
  `),n("span",{class:"token keyword"},"const"),a(" prop "),n("span",{class:"token operator"},"="),a(" ctx"),n("span",{class:"token punctuation"},"."),a("customProp"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

bot`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"start"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),xa=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"const"),a(),n("span",{class:"token punctuation"},"{"),a(" Bot"),n("span",{class:"token punctuation"},","),a(" Context "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token keyword"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"grammy"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

`),n("span",{class:"token comment"},"// Definisikan class context khusus."),a(`
`),n("span",{class:"token keyword"},"class"),a(),n("span",{class:"token class-name"},"MyContext"),a(),n("span",{class:"token keyword"},"extends"),a(),n("span",{class:"token class-name"},"Context"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// Tentukan property yang diinginkan."),a(`
  `),n("span",{class:"token keyword"},"public"),a(),n("span",{class:"token keyword"},"readonly"),a(" customProp"),n("span",{class:"token punctuation"},";"),a(`

  `),n("span",{class:"token function"},"constructor"),n("span",{class:"token punctuation"},"("),a("update"),n("span",{class:"token punctuation"},","),a(" api"),n("span",{class:"token punctuation"},","),a(" me"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"super"),n("span",{class:"token punctuation"},"("),a("update"),n("span",{class:"token punctuation"},","),a(" api"),n("span",{class:"token punctuation"},","),a(" me"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),a("customProp "),n("span",{class:"token operator"},"="),a(" me"),n("span",{class:"token punctuation"},"."),a("username"),n("span",{class:"token punctuation"},"."),a("length "),n("span",{class:"token operator"},"*"),a(),n("span",{class:"token number"},"42"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token comment"},"// Masukkan constructor class context modifikasi sebagai sebuah opsi."),a(`
`),n("span",{class:"token keyword"},"const"),a(" bot "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token keyword"},"new"),a(),n("span",{class:"token class-name"},"Bot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"<token>"'),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token punctuation"},"{"),a(`
  ContextConstructor`),n("span",{class:"token operator"},":"),a(" MyContext"),n("span",{class:"token punctuation"},","),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

bot`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"on"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"message"'),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token punctuation"},"("),a("ctx"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// `ctx` sekarang mempunyai type `MyContext`!"),a(`
  `),n("span",{class:"token keyword"},"const"),a(" prop "),n("span",{class:"token operator"},"="),a(" ctx"),n("span",{class:"token punctuation"},"."),a("customProp"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

bot`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"start"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),fa=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" Bot"),n("span",{class:"token punctuation"},","),a(" Context "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},'"https://deno.land/x/grammy@v1.11.1/mod.ts"'),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token keyword"},"type"),a(),n("span",{class:"token punctuation"},"{"),a(" Update"),n("span",{class:"token punctuation"},","),a(" UserFromGetMe "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},'"https://esm.sh/@grammyjs/types"'),n("span",{class:"token punctuation"},";"),a(`

`),n("span",{class:"token comment"},"// Definisikan class context khusus."),a(`
`),n("span",{class:"token keyword"},"class"),a(),n("span",{class:"token class-name"},"MyContext"),a(),n("span",{class:"token keyword"},"extends"),a(),n("span",{class:"token class-name"},"Context"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// Tentukan property yang diinginkan."),a(`
  `),n("span",{class:"token keyword"},"public"),a(),n("span",{class:"token keyword"},"readonly"),a(" customProp"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token builtin"},"number"),n("span",{class:"token punctuation"},";"),a(`

  `),n("span",{class:"token function"},"constructor"),n("span",{class:"token punctuation"},"("),a("update"),n("span",{class:"token operator"},":"),a(" Update"),n("span",{class:"token punctuation"},","),a(" api"),n("span",{class:"token operator"},":"),a(" Api"),n("span",{class:"token punctuation"},","),a(" me"),n("span",{class:"token operator"},":"),a(" UserFromGetMe"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"super"),n("span",{class:"token punctuation"},"("),a("update"),n("span",{class:"token punctuation"},","),a(" api"),n("span",{class:"token punctuation"},","),a(" me"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),a("customProp "),n("span",{class:"token operator"},"="),a(" me"),n("span",{class:"token punctuation"},"."),a("username"),n("span",{class:"token punctuation"},"."),a("length "),n("span",{class:"token operator"},"*"),a(),n("span",{class:"token number"},"42"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token comment"},"// Masukkan constructor class context modifikasi sebagai sebuah opsi."),a(`
`),n("span",{class:"token keyword"},"const"),a(" bot "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token keyword"},"new"),a(),n("span",{class:"token class-name"},"Bot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"<token>"'),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token punctuation"},"{"),a(`
  ContextConstructor`),n("span",{class:"token operator"},":"),a(" MyContext"),n("span",{class:"token punctuation"},","),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

bot`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"on"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"message"'),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token punctuation"},"("),a("ctx"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// `ctx` sekarang mempunyai type `MyContext`!"),a(`
  `),n("span",{class:"token keyword"},"const"),a(" prop "),n("span",{class:"token operator"},"="),a(" ctx"),n("span",{class:"token punctuation"},"."),a("customProp"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

bot`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"start"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),wa=t('<p>Perhatikan bagaimana type context hasil modifikasi sudah ditentukan secara otomatis ketika kamu menggunakan subclass. Sehingga, kamu tidak perlu lagi menulis <code>Bot&lt;My<wbr>Context&gt;</code> karena constructor subclass sudah ditentukan di dalam opsi object <code>new Bot()</code>.</p><p>Akan tetapi, dengan menggunakan metode ini membuatnya sangat sulit\u2014bahkan mungkin mustahil\u2014untuk menginstal plugin, karena plugin-plugin tersebut sering kali mengharuskan kamu untuk menggunakan context flavor.</p><h2 id="context-flavor" tabindex="-1"><a class="header-anchor" href="#context-flavor" aria-hidden="true">#</a> Context Flavor</h2><p>Context flavor adalah suatu cara untuk memberitahu TypeScript mengenai adanya property baru di dalam object context-mu. Property-property ini dapat disertakan di dalam plugin atau module lain yang kemudian diinstal di bot kamu.</p><p>Context flavor juga mampu mengubah type property yang sudah ada menggunakan prosedur otomatis yang sudah ditentukan oleh plugin tersebut.</p><h3 id="additive-context-flavor" tabindex="-1"><a class="header-anchor" href="#additive-context-flavor" aria-hidden="true">#</a> Additive Context Flavor</h3><p>Context flavor terdiri atas dua jenis. Jenis yang paling sederhana disebut dengan <em>additive context flavor</em>. Kapanpun kita berbicara mengenai context flavor, yang kita maksud adalah jenis ini. Mari kita lihat bagaimana cara kerjanya.</p>',7),ja=a("Sebagai contoh, ketika kamu memiliki "),Ca=a("data session"),Ma=a(", maka kamu harus menambahkan "),qa=n("code",null,[a("ctx"),n("wbr"),a(".session")],-1),Ta=a(" ke dalam type context tersebut. Jika tidak dilakukan"),Ba=t(`<ol><li>Kamu tidak bisa memasang plugin sessions bawaan; dan</li><li>Kamu tidak memiliki akses ke <code>ctx<wbr>.session</code> di listener kamu.</li></ol><blockquote><p>Meski kami menggunakan session sebagai contoh, namun ini juga berlaku untuk berbagai hal lainnya. Bahkan, sebagian besar plugin menggunakan sebuah context flavor agar kamu bisa menggunakannya dengan baik.</p></blockquote><p>Type context hanyalah sebuah type kecil yang mendefinisikan property-property apa saja yang harus ditambahkan ke dalam type context. Mari kita lihat contoh flavor berikut.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">SessionFlavor<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  session<span class="token operator">:</span> <span class="token constant">S</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),Pa=a("Type "),Da=n("code",null,[a("Session"),n("wbr"),a("Flavor")],-1),Sa=a(" ("),Ea={href:"https://doc.deno.land/https://deno.land/x/grammy/mod.ts/~/SessionFlavor",target:"_blank",rel:"noopener noreferrer"},Aa=a("referensi API"),Fa=a(") di atas cukup sederhana: ia hanya mendefinisikan property "),Ia=n("code",null,"session",-1),Oa=a(". Ia mengambil type parameter yang akan mendefinisikan struktur asli dari sebuah data session."),Ka=t(`<p>Lantas, manfaatnya apa? Berikut bagaimana kamu bisa memberi flavor ke context dengan data session:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Context<span class="token punctuation">,</span> SessionFlavor <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;grammy&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// Deklarasikan \`ctx.session\` menjadi type \`string\`.</span>
<span class="token keyword">type</span> <span class="token class-name">MyContext</span> <span class="token operator">=</span> Context <span class="token operator">&amp;</span> SessionFlavor<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Sekarang kamu dapat menggunakan plugin session serta memiliki akses ke <code>ctx<wbr>.session</code>:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Sekarang \`str\` memiliki type \`string\`.</span>
  <span class="token keyword">const</span> str <span class="token operator">=</span> ctx<span class="token punctuation">.</span>session<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="transformative-context-flavor" tabindex="-1"><a class="header-anchor" href="#transformative-context-flavor" aria-hidden="true">#</a> Transformative Context Flavor</h3><p>Jenis context flavor yang kedua lebih hebat lagi. Ketimbang dipasang menggunakan operator <code>&amp;</code>, ia cuma perlu dipasang seperti ini:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Context <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;grammy&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> FlavorA <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;plugin-ku&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">ContextKu</span> <span class="token operator">=</span> FlavorA<span class="token operator">&lt;</span>Context<span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Selebihnya sama saja.</p><p>Setiap plugin\u2014yang resmi\u2014sudah tercantum di dalam dokumentasinya apakah harus menggunakan context flavor jenis <em>additive</em> atau <em>transformative</em>.</p><h3 id="mengombinasikan-context-flavor-yang-berbeda" tabindex="-1"><a class="header-anchor" href="#mengombinasikan-context-flavor-yang-berbeda" aria-hidden="true">#</a> Mengombinasikan Context Flavor yang Berbeda</h3><p>Jika kamu punya beberapa <a href="#additive-context-flavor">additive context flavor</a> yang berbeda, tinggal dipasang seperti ini:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ContextKu</span> <span class="token operator">=</span> Context <span class="token operator">&amp;</span> FlavorA <span class="token operator">&amp;</span> FlavorB <span class="token operator">&amp;</span> FlavorC<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Urutan context flavor tidak berpengaruh, kamu bisa mengurutkannya sesuai keinginan.</p><p>Beberapa <a href="#transformative-context-flavor">transformative context flavor</a> juga bisa dikombinasikan:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ContextKu</span> <span class="token operator">=</span> FlavorX<span class="token operator">&lt;</span>FlavorY<span class="token operator">&lt;</span>FlavorZ<span class="token operator">&lt;</span>Context<span class="token operator">&gt;&gt;&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Di sini, urutan context flavor akan berpengaruh. <code>FlavorZ</code> mengubah <code>Context</code> terlebih dahulu, lalu dilanjutkan oleh <code>FlavorY</code>, dan hasilnya akan diubah kembali oleh <code>FlavorX</code>. Dalam praktiknya, ini tidak perlu dikhawatirkan karena plugin biasanya tidak saling berbenturan satu sama lain.</p><p>Bahkan kamu bisa mencampur flavor additive dan flavor transformative sekaligus:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ContextKu</span> <span class="token operator">=</span> FlavorX<span class="token operator">&lt;</span>
  FlavorY<span class="token operator">&lt;</span>
    FlavorZ<span class="token operator">&lt;</span>
      Context <span class="token operator">&amp;</span> FlavorA <span class="token operator">&amp;</span> FlavorB <span class="token operator">&amp;</span> FlavorC
    <span class="token operator">&gt;</span>
  <span class="token operator">&gt;</span>
<span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18);function Ra(La,Ua){const u=p("AutotagPage"),o=p("ExternalLinkIcon"),i=p("RouterLink"),c=p("CodeGroupItem"),l=p("CodeGroup");return d(),k("div",null,[b,s(u,{config:'[{"url":["/plugins"],"exclude":["console-time","middlewares","autoquote","guide","session","keyboard","/"],"tag":[{"template":"official","text":"OFFICIAL","desc":"This plugin is published and maintained by grammY","locale":{"es":{"text":"OFICIAL","desc":"Este plugin es publicado y mantenido por grammY"},"id":{"text":"RESMI","desc":"Plugin ini dipublikasi dan dikelola oleh grammY"},"zh":{"text":"\u5B98\u65B9\u7EF4\u62A4","desc":"\u8FD9\u4E2A\u63D2\u4EF6\u662F\u7531grammY\u53D1\u5E03\u548C\u7EF4\u62A4\u7684"}}}]},{"url":["/plugins"],"include":["console-time","middlewares","autoquote"],"tag":[{"template":"thirdparty","text":"THIRD-PARTY","desc":"This plugin is maintained by third-party","locale":{"es":{"text":"DE TERCEROS","desc":"Este plugin es mantenido por terceros"},"id":{"text":"PIHAK KETIGA","desc":"Plugin ini dikelola oleh pihak ketiga"},"zh":{"text":"\u7B2C\u4E09\u65B9","desc":"\u8FD9\u4E2A\u63D2\u4EF6\u662F\u7531\u7B2C\u4E09\u65B9\u7EF4\u62A4\u7684"}}}]},{"url":["/hosting"],"exclude":["gcf","comparison"],"tag":[{"template":"deno","desc":"This setup is able to run Deno bots","locale":{"es":{"desc":"Esta configuraci\xF3n es capaz de ejecutar bots Deno"},"id":{"desc":"Konfigurasi ini dapat dijalankan di bot Deno"},"zh":{"desc":"\u8FD9\u4E2A\u8BBE\u7F6E\u80FD\u591F\u8FD0\u884CDeno\u673A\u5668\u4EBA"}}}]},{"url":["/hosting"],"include":["heroku","vps"],"tag":[{"template":"nodejs","desc":"This setup is able to run Node.js bots","locale":{"es":{"desc":"Esta configuraci\xF3n es capaz de ejecutar bots Node.js"},"id":{"desc":"Konfigurasi ini dapat dijalankan di bot Node.js"},"zh":{"desc":"\u8FD9\u4E2A\u8BBE\u7F6E\u80FD\u591F\u8FD0\u884CNode.js\u673A\u5668\u4EBA"}}}]}]'}),n("p",null,[g,h,v,n("a",y,[_,s(o)]),x]),f,n("p",null,[w,j,C,M,q,n("a",T,[B,s(o)]),P]),D,n("p",null,[S,E,A,n("a",F,[I,s(o)]),O,K,R,L,U]),G,n("div",H,[J,n("p",null,[V,Y,N,s(i,{to:"/id/guide/filter-queries.html"},{default:e(()=>[z]),_:1}),Q,s(i,{to:"/id/plugins/conversations.html"},{default:e(()=>[X]),_:1}),Z])]),W,n("p",null,[$,n("a",nn,[an,s(o)]),sn,n("a",en,[tn,s(o)]),on,cn,pn]),ln,n("p",null,[un,rn,dn,s(i,{to:"/id/guide/basics.html#mengirim-pesan"},{default:e(()=>[kn]),_:1}),mn]),n("div",bn,[gn,n("p",null,[hn,vn,yn,n("a",_n,[xn,s(o)]),fn,s(i,{to:"/id/guide/basics.html#mengirim-pesan-dengan-reply"},{default:e(()=>[wn]),_:1}),jn]),n("p",null,[Cn,n("a",Mn,[qn,s(o)]),Tn]),Bn]),n("p",null,[Pn,n("a",Dn,[Sn,s(o)]),En]),An,n("p",null,[Fn,n("a",In,[On,s(o)]),Kn]),Rn,n("p",null,[Ln,s(i,{to:"/id/guide/middleware.html"},{default:e(()=>[Un]),_:1}),Gn]),Hn,Jn,Vn,Yn,n("p",null,[Nn,s(i,{to:"/id/guide/middleware.html"},{default:e(()=>[zn]),_:1}),Qn]),n("div",Xn,[Zn,n("p",null,[Wn,s(i,{to:"/id/guide/middleware.html"},{default:e(()=>[$n]),_:1}),na]),aa]),sa,s(l,null,{default:e(()=>[s(c,{title:"TypeScript",active:""},{default:e(()=>[ea]),_:1}),s(c,{title:"JavaScript"},{default:e(()=>[ta]),_:1})]),_:1}),n("p",null,[oa,n("a",ia,[ca,s(o)]),pa]),la,n("p",null,[ua,s(i,{to:"/id/plugins/router.html"},{default:e(()=>[ra]),_:1}),da,s(i,{to:"/id/plugins/menu.html"},{default:e(()=>[ka]),_:1}),ma,ba,ga,ha,va]),ya,s(l,null,{default:e(()=>[s(c,{title:"TypeScript",active:""},{default:e(()=>[_a]),_:1}),s(c,{title:"JavaScript",active:""},{default:e(()=>[xa]),_:1}),s(c,{title:"Deno"},{default:e(()=>[fa]),_:1})]),_:1}),wa,n("p",null,[ja,s(i,{to:"/id/plugins/session.html"},{default:e(()=>[Ca]),_:1}),Ma,qa,Ta]),Ba,n("p",null,[Pa,Da,Sa,n("a",Ea,[Aa,s(o)]),Fa,Ia,Oa]),Ka])}const Ha=r(m,[["render",Ra],["__file","context.html.vue"]]);export{Ha as default};
