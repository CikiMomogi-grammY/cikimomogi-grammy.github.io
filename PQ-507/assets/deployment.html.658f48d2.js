import{_ as l,r as a,o as d,c as h,b as o,a as t,w as n,d as e}from"./app.9837a88d.js";const c={},_=t("h1",{id:"deployment-checklist",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#deployment-checklist","aria-hidden":"true"},"#"),e(" Deployment Checklist")],-1),u=t("p",null,"Here is a list of things that you may want to keep in mind when hosting a large bot.",-1),m=t("blockquote",null,[t("p",null,[e("You may also be interested in our guides for hosting a bot. Check out "),t("strong",null,"Hosting / Tutorials"),e(" at the top of the page to see some of the platforms that already have dedicated guides.")])],-1),g=t("h2",{id:"errors",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#errors","aria-hidden":"true"},"#"),e(" Errors")],-1),p=e("Install an error handler with "),f=t("code",null,[e("bot"),t("wbr"),e(".catch")],-1),b=e(" (long polling) or on your web framework (webhooks)."),y=t("li",null,[e("Use "),t("code",null,"await"),e(" on all promises and install "),t("strong",null,"linting"),e(", with rules that enforce this, so that you never forget.")],-1),k=t("h2",{id:"message-sending",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#message-sending","aria-hidden":"true"},"#"),e(" Message Sending")],-1),w=e("Send files by path or "),x=t("code",null,"Buffer",-1),v=e(" instead of by stream, or at least make sure you "),T=e("know the pitfalls"),C=e("."),I=e("Use "),E=t("code",null,[e("bot"),t("wbr"),e('.on("callback'),t("wbr"),e("_query:"),t("wbr"),e('data")')],-1),P=e(" as the fallback handler to "),j=e("react to all callback queries"),A=e("."),q=e("Use the "),z=t("code",null,[e("transformer"),t("wbr"),e("-throttler")],-1),S=e(" plugin"),U=e(" to avoid hitting rate limits."),Y=t("strong",null,"Optional.",-1),D=e(" Consider using the "),L=t("code",null,[e("auto"),t("wbr"),e("-retry")],-1),N=e(" plugin"),R=e(" to automatically handle flood wait errors."),B=t("h2",{id:"scaling",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#scaling","aria-hidden":"true"},"#"),e(" Scaling")],-1),M=t("p",null,"This depends on your deployment type.",-1),K=t("h3",{id:"long-polling",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#long-polling","aria-hidden":"true"},"#"),e(" Long Polling")],-1),F=e("Use grammY runner"),H=t("wbr",null,null,-1),O=e("."),W=e("Use "),V=t("code",null,"sequentialize",-1),G=e(" with the same session key resolver function as your session middleware."),J=e("Go through the configuration options of "),Q=t("code",null,"run",-1),X=e(" ("),Z={href:"https://doc.deno.land/https://deno.land/x/grammy_runner/mod.ts/~/run",target:"_blank",rel:"noopener noreferrer"},$=e("API reference"),ee=e(") and make sure they fit your needs, or even consider composing your own runner out of "),te={href:"https://doc.deno.land/https://deno.land/x/grammy_runner/mod.ts/~/UpdateSource",target:"_blank",rel:"noopener noreferrer"},oe=e("sources"),se=e(" and "),ne={href:"https://doc.deno.land/https://deno.land/x/grammy_runner/mod.ts/~/UpdateSink",target:"_blank",rel:"noopener noreferrer"},ie=e("sinks"),ae=e(". The main thing to consider is the maximum load you want to apply to your server, i.e. how many updates may be processed at the same time."),re=e("Consider implementing "),le=e("graceful shutdown"),de=e(" in order to stop your bot when you want to terminate it (i.e. to switch to a new version)."),he=t("h3",{id:"webhooks",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#webhooks","aria-hidden":"true"},"#"),e(" Webhooks")],-1),ce=e("Make sure you do not perform any long-running operations in your middleware, such as large file transfers. "),_e=e("This leads to timeout errors"),ue=e(" for the webhooks, and duplicate update processing as Telegram will re-send non-acknowledged updates. Consider using a task queuing system instead."),me=e("Make yourself familiar with the configuration of "),ge=t("code",null,[e("webhook"),t("wbr"),e("Callback")],-1),pe=e(" ("),fe={href:"https://doc.deno.land/https://deno.land/x/grammy/mod.ts/~/webhookCallback",target:"_blank",rel:"noopener noreferrer"},be=e("API reference"),ye=e(")."),ke=e("If you adjusted the "),we=t("code",null,[e("get"),t("wbr"),e("Session"),t("wbr"),e("Key")],-1),xe=e(" option for your session, "),ve=e("use "),Te=t("code",null,"sequentialize",-1),Ce=e(" with the same session key resolver function as your session middleware"),Ie=e("."),Ee=e("If you are running on a serverless or autoscaling platform, "),Pe={href:"https://doc.deno.land/https://deno.land/x/grammy/mod.ts/~/BotConfig",target:"_blank",rel:"noopener noreferrer"},je=e("set the bot information"),Ae=e(" to prevent excessive "),qe=t("code",null,[e("get"),t("wbr"),e("Me")],-1),ze=e(" calls."),Se=e("Consider using "),Ue=e("webhook replies"),Ye=e("."),De=t("h2",{id:"sessions",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#sessions","aria-hidden":"true"},"#"),e(" Sessions")],-1),Le=e("Consider using "),Ne=t("code",null,[e("lazy"),t("wbr"),e("Sessions")],-1),Re=e(" as explained "),Be=e("here"),Me=e("."),Ke=t("li",null,[e("Use the "),t("code",null,"storage"),e(" option to set your storage adapter, otherwise all data will be lost when the bot process stops.")],-1),Fe=t("h2",{id:"testing",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#testing","aria-hidden":"true"},"#"),e(" Testing")],-1),He=t("p",null,"Write tests for your bot. This can be done with grammY like so:",-1),Oe=e("Mock outgoing API requests using "),We=e("transformer functions"),Ve=e("."),Ge=e("Define and send sample update objects to your bot via "),Je=t("code",null,[e("bot"),t("wbr"),e(".handle"),t("wbr"),e("Update")],-1),Qe=e(" ("),Xe={href:"https://doc.deno.land/https://deno.land/x/grammy/mod.ts/~/Bot#handleUpdate",target:"_blank",rel:"noopener noreferrer"},Ze=e("API reference"),$e=e("). Consider to take some inspiration from "),et={href:"https://core.telegram.org/bots/webhooks#testing-your-bot-with-updates",target:"_blank",rel:"noopener noreferrer"},tt=e("these update objects"),ot=e(" provided by the Telegram team."),st={class:"custom-container tip"},nt=t("p",{class:"custom-container-title"},"Contribute a Testing Framework",-1),it=t("p",null,"While grammY provides the necessary hooks to start writing tests, it would be very helpful to have a testing framework for bots. This is novel territory, such testing frameworks largely do not exist. We look forward to your contributions!",-1),at=e("An example on how tests could be done "),rt={href:"https://github.com/PavelPolyakov/grammy-with-tests",target:"_blank",rel:"noopener noreferrer"},lt=e("can be found here"),dt=e(".");function ht(ct,_t){const r=a("AutotagPage"),s=a("RouterLink"),i=a("ExternalLinkIcon");return d(),h("div",null,[_,o(r,{config:'[{"url":["/plugins"],"exclude":["console-time","middlewares","autoquote","guide","session","keyboard","/"],"tag":[{"template":"official","text":"OFFICIAL","desc":"This plugin is published and maintained by grammY","locale":{"es":{"text":"OFICIAL","desc":"Este plugin es publicado y mantenido por grammY"},"id":{"text":"RESMI","desc":"Plugin ini dipublikasi dan dikelola oleh grammY"},"zh":{"text":"\u5B98\u65B9\u7EF4\u62A4","desc":"\u8FD9\u4E2A\u63D2\u4EF6\u662F\u7531grammY\u53D1\u5E03\u548C\u7EF4\u62A4\u7684"}}}]},{"url":["/plugins"],"include":["console-time","middlewares","autoquote"],"tag":[{"template":"thirdparty","text":"THIRD-PARTY","desc":"This plugin is maintained by third-party","locale":{"es":{"text":"DE TERCEROS","desc":"Este plugin es mantenido por terceros"},"id":{"text":"PIHAK KETIGA","desc":"Plugin ini dikelola oleh pihak ketiga"},"zh":{"text":"\u7B2C\u4E09\u65B9","desc":"\u8FD9\u4E2A\u63D2\u4EF6\u662F\u7531\u7B2C\u4E09\u65B9\u7EF4\u62A4\u7684"}}}]},{"url":["/hosting"],"exclude":["gcf","comparison"],"tag":[{"template":"deno","desc":"This setup is able to run Deno bots","locale":{"es":{"desc":"Esta configuraci\xF3n es capaz de ejecutar bots Deno"},"id":{"desc":"Konfigurasi ini dapat dijalankan di bot Deno"},"zh":{"desc":"\u8FD9\u4E2A\u8BBE\u7F6E\u80FD\u591F\u8FD0\u884CDeno\u673A\u5668\u4EBA"}}}]},{"url":["/hosting"],"include":["heroku","vps"],"tag":[{"template":"nodejs","desc":"This setup is able to run Node.js bots","locale":{"es":{"desc":"Esta configuraci\xF3n es capaz de ejecutar bots Node.js"},"id":{"desc":"Konfigurasi ini dapat dijalankan di bot Node.js"},"zh":{"desc":"\u8FD9\u4E2A\u8BBE\u7F6E\u80FD\u591F\u8FD0\u884CNode.js\u673A\u5668\u4EBA"}}}]}]'}),u,m,g,t("ol",null,[t("li",null,[o(s,{to:"/guide/errors.html"},{default:n(()=>[p,f,b]),_:1})]),y]),k,t("ol",null,[t("li",null,[w,x,v,o(s,{to:"/advanced/transformers.html#use-cases-of-transformer-functions"},{default:n(()=>[T]),_:1}),C]),t("li",null,[I,E,P,o(s,{to:"/plugins/keyboard.html#responding-to-clicks"},{default:n(()=>[j]),_:1}),A]),t("li",null,[q,o(s,{to:"/plugins/transformer-throttler.html"},{default:n(()=>[z,S]),_:1}),U]),t("li",null,[Y,D,o(s,{to:"/plugins/auto-retry.html"},{default:n(()=>[L,N]),_:1}),R])]),B,M,K,t("ol",null,[t("li",null,[o(s,{to:"/plugins/runner.html"},{default:n(()=>[F,H,O]),_:1})]),t("li",null,[o(s,{to:"/advanced/scaling.html#concurrency-is-hard"},{default:n(()=>[W,V,G]),_:1})]),t("li",null,[J,Q,X,t("a",Z,[$,o(i)]),ee,t("a",te,[oe,o(i)]),se,t("a",ne,[ie,o(i)]),ae]),t("li",null,[re,o(s,{to:"/advanced/reliability.html#graceful-shutdown"},{default:n(()=>[le]),_:1}),de])]),he,t("ol",null,[t("li",null,[ce,o(s,{to:"/guide/deployment-types.html#ending-webhook-requests-in-time"},{default:n(()=>[_e]),_:1}),ue]),t("li",null,[me,ge,pe,t("a",fe,[be,o(i)]),ye]),t("li",null,[ke,we,xe,o(s,{to:"/advanced/scaling.html#concurrency-is-hard"},{default:n(()=>[ve,Te,Ce]),_:1}),Ie]),t("li",null,[Ee,t("a",Pe,[je,o(i)]),Ae,qe,ze]),t("li",null,[Se,o(s,{to:"/guide/deployment-types.html#webhook-reply"},{default:n(()=>[Ue]),_:1}),Ye])]),De,t("ol",null,[t("li",null,[Le,Ne,Re,o(s,{to:"/plugins/session.html#lazy-sessions"},{default:n(()=>[Be]),_:1}),Me]),Ke]),Fe,He,t("ol",null,[t("li",null,[Oe,o(s,{to:"/advanced/transformers.html"},{default:n(()=>[We]),_:1}),Ve]),t("li",null,[Ge,Je,Qe,t("a",Xe,[Ze,o(i)]),$e,t("a",et,[tt,o(i)]),ot])]),t("div",st,[nt,it,t("p",null,[at,t("a",rt,[lt,o(i)]),dt])])])}const mt=l(c,[["render",ht],["__file","deployment.html.vue"]]);export{mt as default};
