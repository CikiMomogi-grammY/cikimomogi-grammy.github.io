import{_ as u,r as l,o as d,c as k,b as a,a as n,w as e,d as s,e as t}from"./app.9837a88d.js";const m={},b=n("h1",{id:"context",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#context","aria-hidden":"true"},"#"),s(" Context")],-1),v=s("El objeto "),g=n("code",null,"Context",-1),h=s(" ("),x={href:"https://doc.deno.land/https://deno.land/x/grammy/mod.ts/~/Context",target:"_blank",rel:"noopener noreferrer"},y=s("Referencia de la API de grammY"),_=s(") es una parte importante de grammY."),f=t('<p>Siempre que registres un oyente en tu objeto bot, este oyente recibir\xE1 un objeto <code>Context</code>.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// `ctx` es el objeto `Context`.</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Puedes utilizar el objeto de contexto para:</p><ul><li><a href="#informaci%C3%B3n-disponible">acceder a la informaci\xF3n sobre el mensaje</a></li><li><a href="#acciones-disponibles">realizar acciones en respuesta al mensaje</a>.</li></ul><p>Tenga en cuenta que los objetos <code>Context</code> se llaman com\xFAnmente <code>ctx</code>.</p><h2 id="informacion-disponible" tabindex="-1"><a class="header-anchor" href="#informacion-disponible" aria-hidden="true">#</a> Informaci\xF3n disponible</h2><p>Cuando un usuario env\xEDa un mensaje a tu bot, puedes acceder a \xE9l a trav\xE9s de <code>ctx<wbr>.message</code>. Como ejemplo, para obtener el texto del mensaje, puedes hacer esto:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// `ctx` ser\xE1 un `string` cuando se procesen mensajes de texto.</span>\n  <span class="token comment">// Ser\xE1 `undefined` si el mensaje recibido no tiene ning\xFAn mensaje de texto,</span>\n  <span class="token comment">// por ejemplo, fotos, pegatinas y otros mensajes.</span>\n  <span class="token keyword">const</span> txt <span class="token operator">=</span> ctx<span class="token punctuation">.</span>message<span class="token punctuation">.</span>text<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',8),w=s("Del mismo modo, puedes acceder a otras propiedades del objeto mensaje, por ejemplo "),j=n("code",null,[s("ctx"),n("wbr"),s(".message"),n("wbr"),s(".chat")],-1),q=s(" para obtener informaci\xF3n sobre el chat donde se envi\xF3 el mensaje. Revisa la "),C={href:"https://core.telegram.org/bots/api#message",target:"_blank",rel:"noopener noreferrer"},E=s("parte sobre "),z=n("code",null,"Mensajes",-1),D=s(" en la Referencia de la API de Telegram Bot"),M=s(" para ver qu\xE9 datos est\xE1n disponibles. Alternativamente, puedes usar simplemente el autocompletado en tu editor de c\xF3digo para ver las posibles opciones."),P=t(`<p>Si registras tu listener para otros tipos, <code>ctx</code> tambi\xE9n te dar\xE1 informaci\xF3n sobre ellos. Ejemplo:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;edited_message&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Obtenga el nuevo texto editado del mensaje.</span>
  <span class="token keyword">const</span> editedText <span class="token operator">=</span> ctx<span class="token punctuation">.</span>editedMessage<span class="token punctuation">.</span>text<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),T=s("Adem\xE1s, puedes obtener acceso al objeto crudo "),B=n("code",null,"Update",-1),A=s(" ("),F={href:"https://core.telegram.org/bots/api#update",target:"_blank",rel:"noopener noreferrer"},O=s("Referencia de la API de Telegram Bot"),S=s(") que Telegram env\xEDa a tu bot. Este objeto de actualizaci\xF3n ("),I=n("code",null,[s("ctx"),n("wbr"),s(".update")],-1),R=s(") contiene todos los datos que las fuentes "),L=n("code",null,[s("ctx"),n("wbr"),s(".message")],-1),V=s(" y similares."),Y=t(`<p>El objeto context siempre contiene informaci\xF3n sobre tu bot, accesible a trav\xE9s de <code>ctx<wbr>.me</code>.</p><h3 id="atajos" tabindex="-1"><a class="header-anchor" href="#atajos" aria-hidden="true">#</a> Atajos</h3><p>Hay una serie de accesos directos instalados en el objeto de contexto.</p><table><thead><tr><th>Atajo</th><th>Descripci\xF3n</th></tr></thead><tbody><tr><td><code>ctx<wbr>.msg</code></td><td>Obtiene el objeto mensaje, tambi\xE9n los editados</td></tr><tr><td><code>ctx<wbr>.chat</code></td><td>Obtiene el objeto chat</td></tr><tr><td><code>ctx<wbr>.sender<wbr>Chat</code></td><td>Obtiene el objeto de chat del remitente de <code>ctx<wbr>.msg</code> (para mensajes an\xF3nimos de canal/grupo)</td></tr><tr><td><code>ctx<wbr>.from</code></td><td>Obtiene el autor del mensaje, la consulta de devoluci\xF3n de llamada, u otras cosas</td></tr><tr><td><code>ctx<wbr>.inline<wbr>Message<wbr>Id</code></td><td>Obtiene el identificador del mensaje en l\xEDnea para las consultas de devoluci\xF3n de llamada o los resultados elegidos en l\xEDnea</td></tr></tbody></table><p>En otras palabras, tambi\xE9n puedes hacer esto:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Obtenga el texto del mensaje.</span>
  <span class="token keyword">const</span> text <span class="token operator">=</span> ctx<span class="token punctuation">.</span>msg<span class="token punctuation">.</span>text<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;edited_message&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Obtener el nuevo texto editado del mensaje.</span>
  <span class="token keyword">const</span> editedText <span class="token operator">=</span> ctx<span class="token punctuation">.</span>msg<span class="token punctuation">.</span>text<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Por lo tanto, si lo desea, puede olvidarse de <code>ctx<wbr>.message</code> y <code>ctx<wbr>.channel<wbr>Post</code> y <code>ctx<wbr>.edited<wbr>Message</code> y as\xED sucesivamente, y s\xF3lo utilizar siempre <code>ctx<wbr>.msg</code> en su lugar.</p><h2 id="acciones-disponibles" tabindex="-1"><a class="header-anchor" href="#acciones-disponibles" aria-hidden="true">#</a> Acciones disponibles</h2><p>Si quieres responder a un mensaje de un usuario, puedes escribir esto:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Obtener el identificador del chat.</span>
  <span class="token keyword">const</span> chatId <span class="token operator">=</span> ctx<span class="token punctuation">.</span>msg<span class="token punctuation">.</span>chat<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
  <span class="token comment">// El texto a responder con</span>
  <span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token string">&quot;\xA1Recib\xED tu mensaje!&quot;</span><span class="token punctuation">;</span>
  <span class="token comment">// Enviar la respuesta.</span>
  <span class="token keyword">await</span> bot<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span>chatId<span class="token punctuation">,</span> text<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Puedes notar dos cosas que no son \xF3ptimas en esto:</p><ol><li>Debemos tener acceso al objeto <code>bot</code>. Esto significa que tenemos que pasar el objeto <code>bot</code> por toda nuestra base de c\xF3digo para responder, lo cual es molesto cuando tienes m\xE1s de un archivo fuente y defines tu listener en otro lugar.</li><li>Tenemos que sacar el identificador de chat del contexto, y pasarlo expl\xEDcitamente a <code>send<wbr>Message</code> de nuevo. Esto tambi\xE9n es molesto, porque lo m\xE1s probable es que siempre quieras responder al mismo usuario que envi\xF3 un mensaje. \xA1Imagina cu\xE1ntas veces escribir\xEDas lo mismo una y otra vez!</li></ol><p>En cuanto al punto 1., el objeto contexto simplemente te proporciona acceso al mismo objeto API que encuentras en <code>bot<wbr>.api</code>, se llama <code>ctx<wbr>.api</code>. Ahora puedes escribir <code>ctx<wbr>.api<wbr>.send<wbr>Message</code> en su lugar y ya no tienes que pasar tu objeto <code>bot</code>. F\xE1cil.</p><p>Sin embargo, la verdadera fuerza es arreglar el punto 2. El objeto context te permite simplemente enviar una respuesta as\xED:</p><p>Traducci\xF3n realizada con la versi\xF3n gratuita del traductor www.DeepL.com/Translator</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&quot;\xA1Recib\xED tu mensaje!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// O, incluso m\xE1s corto:</span>
bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&quot;\xA1Te tengo!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\xA1Genial! \u{1F389}</p><p>Bajo el cap\xF3, el contexto <em>ya conoce su identificador de chat</em> (es decir, <code>ctx<wbr>.msg<wbr>.chat<wbr>.id</code>), por lo que te da el m\xE9todo <code>reply</code> para simplemente enviar un mensaje de vuelta al mismo chat. Internamente, <code>reply</code> vuelve a llamar a <code>send<wbr>Message</code> con el identificador del chat pre-rellenado para ti.</p>`,18),U={class:"custom-container tip"},G=n("p",{class:"custom-container-title"},"Funci\xF3n de respuesta de Telegram",-1),N=s("Aunque el m\xE9todo se llama "),H=n("code",null,[s("ctx"),n("wbr"),s(".reply")],-1),K=s(" en grammY (y en muchos otros frameworks), no utiliza la funci\xF3n "),J={href:"https://telegram.org/blog/replies-mentions-hashtags#replies",target:"_blank",rel:"noopener noreferrer"},X=s("reply de Telegram"),Z=s(" donde se vincula un mensaje anterior."),Q=s("Si buscas lo que puede hacer "),W=n("code",null,[s("send"),n("wbr"),s("Message")],-1),$=s(" en el "),nn={href:"https://core.telegram.org/bots/api#sendmessage",target:"_blank",rel:"noopener noreferrer"},sn=s("Referencia Bot API de Telegram"),an=t(", ver\xE1s un n\xFAmero de opciones, como <code>parse<wbr>_mode</code>, <code>disable<wbr>_web<wbr>_page<wbr>_preview</code>, y <code>reply<wbr>_to<wbr>_message<wbr>_id</code>. Esta \xFAltima puede utilizarse para convertir un mensaje en una respuesta:",7),en=t(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&quot;^ \xA1Esto es un mensaje!&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  reply_to_message_id<span class="token operator">:</span> ctx<span class="token punctuation">.</span>msg<span class="token punctuation">.</span>message_id<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>El mismo objeto de opciones se puede pasar a <code>bot<wbr>.api<wbr>.send<wbr>Message</code> y <code>ctx<wbr>.api<wbr>.send<wbr>Message</code>. Utiliza el autocompletado para ver las opciones disponibles directamente en tu editor de c\xF3digo.</p>`,2),tn=t("Naturalmente, todos los dem\xE1s m\xE9todos de <code>ctx<wbr>.api</code> tienen un acceso directo con los valores correctos precompletados, como <code>ctx<wbr>.reply<wbr>With<wbr>Photo</code> para responder con una foto, o <code>ctx<wbr>.export<wbr>Chat<wbr>Invite<wbr>Link</code> para obtener un enlace de invitaci\xF3n para el chat correspondiente. Si quieres tener una visi\xF3n general de los accesos directos que existen, el autocompletado es tu amigo, junto con la ",7),on={href:"https://doc.deno.land/https://deno.land/x/grammy/mod.ts/~/Context",target:"_blank",rel:"noopener noreferrer"},cn=s("Referencia de la API de grammY"),pn=s("."),ln=t('<p>Ten en cuenta que puede que no quieras reaccionar siempre en el mismo chat. En este caso, puedes volver a utilizar los m\xE9todos <code>ctx<wbr>.api</code>, y especificar todas las opciones al llamarlos. Por ejemplo, si recibes un mensaje de Alice y quieres reaccionar enviando un mensaje a Bob, entonces no puedes usar <code>ctx<wbr>.reply</code> porque siempre enviar\xE1 mensajes al chat con Alice. En su lugar, llama a <code>ctx<wbr>.api<wbr>.send<wbr>Message</code> y especifica el identificador del chat de Bob.</p><h2 id="como-se-crean-los-objetos-de-contexto" tabindex="-1"><a class="header-anchor" href="#como-se-crean-los-objetos-de-contexto" aria-hidden="true">#</a> C\xF3mo se crean los objetos de contexto</h2>',2),rn=s("Cada vez que tu bot recibe un nuevo mensaje de Telegram, se envuelve en un objeto de actualizaci\xF3n. De hecho, los objetos de actualizaci\xF3n no s\xF3lo pueden contener nuevos mensajes, sino tambi\xE9n todo tipo de cosas, como ediciones de mensajes, respuestas a encuestas, y "),un={href:"https://core.telegram.org/bots/api#update",target:"_blank",rel:"noopener noreferrer"},dn=s("mucho m\xE1s"),kn=s("."),mn=n("p",null,[s("Un objeto de contexto nuevo se crea exactamente una vez para cada actualizaci\xF3n entrante. Los contextos para las diferentes actualizaciones son objetos completamente no relacionados, s\xF3lo hacen referencia a la misma informaci\xF3n del bot a trav\xE9s de "),n("code",null,[s("ctx"),n("wbr"),s(".me")]),s(".")],-1),bn=s("El mismo objeto de contexto para una actualizaci\xF3n ser\xE1 compartido por todo el middleware instalado ("),vn=s("documentaci\xF3n"),gn=s(") en el bot."),hn=n("h2",{id:"personalizacion-del-objeto-de-contexto",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#personalizacion-del-objeto-de-contexto","aria-hidden":"true"},"#"),s(" Personalizaci\xF3n del objeto de contexto")],-1),xn=n("blockquote",null,[n("p",null,"Si eres nuevo en los objetos de contexto, no necesitas preocuparte por el resto de esta p\xE1gina.")],-1),yn=n("p",null,"Si lo desea, puede instalar sus propias propiedades en el objeto de contexto.",-1),_n=n("h3",{id:"via-middleware-recomendado",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#via-middleware-recomendado","aria-hidden":"true"},"#"),s(" V\xEDa Middleware (Recomendado)")],-1),fn=s("Las personalizaciones pueden hacerse f\xE1cilmente en "),wn=s("middleware"),jn=s("."),qn={class:"custom-container tip"},Cn=n("p",{class:"custom-container-title"},"\xBFMiddle qu\xE9?",-1),En=s("Esta secci\xF3n requiere una comprensi\xF3n del middleware, as\xED que en caso de que a\xFAn no hayas saltado a "),zn=s("esta secci\xF3n"),Dn=s(", aqu\xED hay un resumen muy breve."),Mn=n("p",null,[s("Todo lo que necesitas saber es que varios manejadores pueden procesar el mismo objeto de contexto. Hay manejadores especiales que pueden modificar "),n("code",null,"ctx"),s(" antes de que se ejecuten otros manejadores, y las modificaciones del primer manejador ser\xE1n visibles para todos los manejadores posteriores.")],-1),Pn=t(`<p>La idea es instalar el middleware antes de registrar otros listeners. Entonces puedes establecer las propiedades que quieras dentro de estos manejadores.</p><p>A modo de ejemplo, digamos que quieres establecer una propiedad llamada <code>ctx<wbr>.config</code> en el objeto contexto. En este ejemplo, la usaremos para almacenar alguna configuraci\xF3n sobre el proyecto para que todos los manejadores tengan acceso a ella. La configuraci\xF3n har\xE1 que sea m\xE1s f\xE1cil detectar si el bot es utilizado por su desarrollador o por los usuarios regulares.</p><p>Justo despu\xE9s de crear tu bot, haz esto:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token constant">BOT_DEVELOPER</span> <span class="token operator">=</span> <span class="token number">123456</span><span class="token punctuation">;</span> <span class="token comment">// identificador del chat del desarrollador del bot</span>
bot<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> next<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Modifica el objeto de contexto aqu\xED estableciendo la configuraci\xF3n.</span>
  ctx<span class="token punctuation">.</span>config <span class="token operator">=</span> <span class="token punctuation">{</span>
    botDeveloper<span class="token operator">:</span> <span class="token constant">BOT_DEVELOPER</span><span class="token punctuation">,</span>
    isDeveloper<span class="token operator">:</span> ctx<span class="token punctuation">.</span>from<span class="token operator">?.</span>id <span class="token operator">===</span> <span class="token constant">BOT_DEVELOPER</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token comment">// Ejecutar los manejadores restantes.</span>
  <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Despu\xE9s de esto, puedes usar <code>ctx<wbr>.config</code> en los manejadores restantes.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>bot<span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&quot;start&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \xA1Trabaja con el contexto modificado aqu\xED!</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>config<span class="token punctuation">.</span>isDeveloper<span class="token punctuation">)</span> <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&quot;\xA1Hola mam\xE1! &lt;3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">else</span> <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&quot;\xA1Bienvenido, humano!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Sin embargo, te dar\xE1s cuenta de que TypeScript no sabe que <code>ctx<wbr>.config</code> est\xE1 disponible, a pesar de que estamos asignando la propiedad correctamente. As\xED que, aunque el c\xF3digo funcionar\xE1 en tiempo de ejecuci\xF3n, no compila. Para solucionar esto, tenemos que ajustar el tipo del contexto y a\xF1adir la propiedad.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">BotConfig</span> <span class="token punctuation">{</span>
  botDeveloper<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  isDeveloper<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">MyContext</span> <span class="token operator">=</span> Context <span class="token operator">&amp;</span> <span class="token punctuation">{</span>
  config<span class="token operator">:</span> BotConfig<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>El nuevo tipo <code>My<wbr>Context</code> ahora describe con precisi\xF3n los objetos de contexto que nuestro bot est\xE1 manejando realmente.</p><blockquote><p>Tendr\xE1s que asegurarte de mantener los tipos sincronizados con las propiedades que inicialices. Podemos utilizar el nuevo tipo pas\xE1ndolo al constructor del <code>Bot</code>.</p></blockquote><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> bot <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bot<span class="token operator">&lt;</span>MyContext<span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>En resumen, la configuraci\xF3n se ver\xE1 as\xED:</p>`,12),Tn=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token constant"},"BOT_DEVELOPER"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"123456"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// identificador del chat del desarrollador del bot"),s(`

`),n("span",{class:"token comment"},"// Definir el tipo de contexto personalizado."),s(`
`),n("span",{class:"token keyword"},"interface"),s(),n("span",{class:"token class-name"},"BotConfig"),s(),n("span",{class:"token punctuation"},"{"),s(`
  botDeveloper`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"number"),n("span",{class:"token punctuation"},";"),s(`
  isDeveloper`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"boolean"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token keyword"},"type"),s(),n("span",{class:"token class-name"},"MyContext"),s(),n("span",{class:"token operator"},"="),s(" Context "),n("span",{class:"token operator"},"&"),s(),n("span",{class:"token punctuation"},"{"),s(`
  config`),n("span",{class:"token operator"},":"),s(" BotConfig"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"const"),s(" bot "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},[s("Bot"),n("span",{class:"token operator"},"<"),s("MyContext"),n("span",{class:"token operator"},">")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'""'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// Establecer propiedades personalizadas en los objetos de contexto."),s(`
bot`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"use"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"async"),s(),n("span",{class:"token punctuation"},"("),s("ctx"),n("span",{class:"token punctuation"},","),s(" next"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  ctx`),n("span",{class:"token punctuation"},"."),s("config "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(`
    botDeveloper`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token constant"},"BOT_DEVELOPER"),n("span",{class:"token punctuation"},","),s(`
    isDeveloper`),n("span",{class:"token operator"},":"),s(" ctx"),n("span",{class:"token punctuation"},"."),s("from"),n("span",{class:"token operator"},"?."),s("id "),n("span",{class:"token operator"},"==="),s(),n("span",{class:"token constant"},"BOT_DEVELOPER"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"await"),s(),n("span",{class:"token function"},"next"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// Definir manejadores para objetos de contexto personalizados."),s(`
`),n("span",{class:"token keyword"},"const"),s(" bot "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},[s("Bot"),n("span",{class:"token operator"},"<"),s("MyContext"),n("span",{class:"token operator"},">")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"<token>"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
bot`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"command"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"start"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"async"),s(),n("span",{class:"token punctuation"},"("),s("ctx"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("ctx"),n("span",{class:"token punctuation"},"."),s("config"),n("span",{class:"token punctuation"},"."),s("isDeveloper"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"await"),s(" ctx"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"reply"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"\xA1Hola mam\xE1!"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token keyword"},"await"),s(" ctx"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"reply"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Bienvenido"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Bn=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token constant"},"BOT_DEVELOPER"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"123456"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// identificador del chat del desarrollador del bot"),s(`

`),n("span",{class:"token keyword"},"const"),s(" bot "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Bot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'""'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// Establecer propiedades personalizadas en los objetos de contexto."),s(`
bot`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"use"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"async"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("ctx"),n("span",{class:"token punctuation"},","),s(" next")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  ctx`),n("span",{class:"token punctuation"},"."),s("config "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token literal-property property"},"botDeveloper"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token constant"},"BOT_DEVELOPER"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token literal-property property"},"isDeveloper"),n("span",{class:"token operator"},":"),s(" ctx"),n("span",{class:"token punctuation"},"."),s("from"),n("span",{class:"token operator"},"?."),s("id "),n("span",{class:"token operator"},"==="),s(),n("span",{class:"token constant"},"BOT_DEVELOPER"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"await"),s(),n("span",{class:"token function"},"next"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// Definir manejadores para objetos de contexto personalizados."),s(`
bot`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"command"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"start"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"async"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"ctx"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("ctx"),n("span",{class:"token punctuation"},"."),s("config"),n("span",{class:"token punctuation"},"."),s("isDeveloper"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"await"),s(" ctx"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"reply"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"\xA1Hola mam\xE1!"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token keyword"},"await"),s(" ctx"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"reply"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Bienvenido"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),An=s("Naturalmente, el tipo de contexto personalizado tambi\xE9n se puede pasar a otras cosas que manejan middleware, como "),Fn={href:"https://doc.deno.land/https://deno.land/x/grammy/mod.ts/~/Composer",target:"_blank",rel:"noopener noreferrer"},On=s("compositores"),Sn=s("."),In=t(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> composer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Composer<span class="token operator">&lt;</span>MyContext<span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),Rn=s("Algunos plugins tambi\xE9n requieren que pases un tipo de contexto personalizado, como el plugin "),Ln=s("router"),Vn=s(" o el plugin "),Yn=s("menu"),Un=s(". Consulta su documentaci\xF3n para ver c\xF3mo pueden utilizar un tipo de contexto personalizado. Estos tipos se llaman context flavors, como se describe "),Gn=n("a",{href:"#context-flavors"},"aqu\xED abajo",-1),Nn=s("."),Hn=t(`<h3 id="via-herencia" tabindex="-1"><a class="header-anchor" href="#via-herencia" aria-hidden="true">#</a> V\xEDa Herencia</h3><p>Adem\xE1s de establecer propiedades personalizadas en el objeto de contexto, puede subclasificar la clase <code>Context</code>.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">MiContexto</span> <span class="token keyword">extends</span> <span class="token class-name">Context</span> <span class="token punctuation">{</span>
  <span class="token comment">// etc</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Sin embargo, te recomendamos que personalices el objeto contexto <a href="#via-middleware-recomendado">v\xEDa middleware</a> porque es mucho m\xE1s flexible y funciona mucho mejor si quieres instalar plugins.</p><p>Ahora veremos c\xF3mo utilizar clases personalizadas para los objetos de contexto.</p><p>Cuando construyas tu bot, puedes pasar un constructor de contexto personalizado que se utilizar\xE1 para instanciar los objetos de contexto. Ten en cuenta que tu clase debe extender <code>Context</code>.</p>`,6),Kn=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" Bot"),n("span",{class:"token punctuation"},","),s(" Context "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"grammy"'),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token keyword"},"type"),s(),n("span",{class:"token punctuation"},"{"),s(" Update"),n("span",{class:"token punctuation"},","),s(" UserFromGetMe "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"@grammyjs/types"'),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// Definir una clase de contexto personalizada."),s(`
`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"MyContext"),s(),n("span",{class:"token keyword"},"extends"),s(),n("span",{class:"token class-name"},"Context"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// Establecer algunas propiedades personalizadas."),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"readonly"),s(" customProp"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"number"),n("span",{class:"token punctuation"},";"),s(`

  `),n("span",{class:"token function"},"constructor"),n("span",{class:"token punctuation"},"("),s("update"),n("span",{class:"token operator"},":"),s(" Update"),n("span",{class:"token punctuation"},","),s(" api"),n("span",{class:"token operator"},":"),s(" Api"),n("span",{class:"token punctuation"},","),s(" me"),n("span",{class:"token operator"},":"),s(" UserFromGetMe"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"super"),n("span",{class:"token punctuation"},"("),s("update"),n("span",{class:"token punctuation"},","),s(" api"),n("span",{class:"token punctuation"},","),s(" me"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("customProp "),n("span",{class:"token operator"},"="),s(" me"),n("span",{class:"token punctuation"},"."),s("username"),n("span",{class:"token punctuation"},"."),s("length "),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token number"},"42"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token comment"},"// Pasar el constructor de la clase de contexto personalizado como una opci\xF3n."),s(`
`),n("span",{class:"token keyword"},"const"),s(" bot "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Bot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"<token>"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(`
  ContextConstructor`),n("span",{class:"token operator"},":"),s(" MyContext"),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

bot`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"on"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"message"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),s("ctx"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// `ctx` es ahora de tipo `MyContext`."),s(`
  `),n("span",{class:"token keyword"},"const"),s(" prop "),n("span",{class:"token operator"},"="),s(" ctx"),n("span",{class:"token punctuation"},"."),s("customProp"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

bot`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"start"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Jn=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"{"),s(" Bot"),n("span",{class:"token punctuation"},","),s(" Context "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"grammy"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// Definir una clase de contexto personalizada."),s(`
`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"MyContext"),s(),n("span",{class:"token keyword"},"extends"),s(),n("span",{class:"token class-name"},"Context"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// Establecer algunas propiedades personalizadas."),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"readonly"),s(" customProp"),n("span",{class:"token punctuation"},";"),s(`

  `),n("span",{class:"token function"},"constructor"),n("span",{class:"token punctuation"},"("),s("update"),n("span",{class:"token punctuation"},","),s(" api"),n("span",{class:"token punctuation"},","),s(" me"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"super"),n("span",{class:"token punctuation"},"("),s("update"),n("span",{class:"token punctuation"},","),s(" api"),n("span",{class:"token punctuation"},","),s(" me"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("customProp "),n("span",{class:"token operator"},"="),s(" me"),n("span",{class:"token punctuation"},"."),s("username"),n("span",{class:"token punctuation"},"."),s("length "),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token number"},"42"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token comment"},"// Pasar el constructor de la clase de contexto personalizado como una opci\xF3n."),s(`
`),n("span",{class:"token keyword"},"const"),s(" bot "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Bot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"<token>"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(`
  ContextConstructor`),n("span",{class:"token operator"},":"),s(" MyContext"),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

bot`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"on"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"message"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),s("ctx"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// `ctx` es ahora de tipo `MyContext`."),s(`
  `),n("span",{class:"token keyword"},"const"),s(" prop "),n("span",{class:"token operator"},"="),s(" ctx"),n("span",{class:"token punctuation"},"."),s("customProp"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

bot`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"start"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Xn=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" Bot"),n("span",{class:"token punctuation"},","),s(" Context "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"https://deno.land/x/grammy@v1.11.1/mod.ts"'),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token keyword"},"type"),s(),n("span",{class:"token punctuation"},"{"),s(" Update"),n("span",{class:"token punctuation"},","),s(" UserFromGetMe "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"https://esm.sh/@grammyjs/types"'),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// Definir una clase de contexto personalizada."),s(`
`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"MyContext"),s(),n("span",{class:"token keyword"},"extends"),s(),n("span",{class:"token class-name"},"Context"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// Establecer algunas propiedades personalizadas."),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"readonly"),s(" customProp"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"number"),n("span",{class:"token punctuation"},";"),s(`

  `),n("span",{class:"token function"},"constructor"),n("span",{class:"token punctuation"},"("),s("update"),n("span",{class:"token operator"},":"),s(" Update"),n("span",{class:"token punctuation"},","),s(" api"),n("span",{class:"token operator"},":"),s(" Api"),n("span",{class:"token punctuation"},","),s(" me"),n("span",{class:"token operator"},":"),s(" UserFromGetMe"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"super"),n("span",{class:"token punctuation"},"("),s("update"),n("span",{class:"token punctuation"},","),s(" api"),n("span",{class:"token punctuation"},","),s(" me"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("customProp "),n("span",{class:"token operator"},"="),s(" me"),n("span",{class:"token punctuation"},"."),s("username"),n("span",{class:"token punctuation"},"."),s("length "),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token number"},"42"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token comment"},"// Pasar el constructor de la clase de contexto personalizado como una opci\xF3n."),s(`
`),n("span",{class:"token keyword"},"const"),s(" bot "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Bot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"<token>"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(`
  ContextConstructor`),n("span",{class:"token operator"},":"),s(" MyContext"),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

bot`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"on"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"message"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),s("ctx"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// `ctx` es ahora de tipo `MyContext`."),s(`
  `),n("span",{class:"token keyword"},"const"),s(" prop "),n("span",{class:"token operator"},"="),s(" ctx"),n("span",{class:"token punctuation"},"."),s("customProp"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

bot`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"start"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Zn=t('<p>F\xEDjate en que el tipo de contexto personalizado ser\xE1 inferido autom\xE1ticamente cuando utilices una subclase. Ya no necesitas escribir <code>Bot&lt;Mi<wbr>Contexto&gt;</code> porque ya has especificado el constructor de tu subclase en el objeto de opciones de <code>new Bot()</code>.</p><p>Sin embargo, esto hace que sea muy dif\xEDcil (si no imposible) instalar plugins, ya que a menudo necesitan que instales context flavors.</p><h2 id="context-flavors" tabindex="-1"><a class="header-anchor" href="#context-flavors" aria-hidden="true">#</a> Context Flavors</h2><p>Context flavors son una forma de informar a TypeScript sobre las nuevas propiedades de su objeto de contexto. Estas nuevas propiedades pueden ser enviadas en plugins u otros m\xF3dulos y luego instaladas en tu bot.</p><p>Los context flavors tambi\xE9n son capaces de transformar los tipos de propiedades existentes utilizando procedimientos autom\xE1ticos que son definidos por los plugins.</p><h3 id="additive-context-flavors" tabindex="-1"><a class="header-anchor" href="#additive-context-flavors" aria-hidden="true">#</a> Additive Context Flavors</h3><p>Como ya se ha dicho, hay dos tipos diferentes de context flavors. El b\xE1sico se llama <em>additive context flavor</em>, y siempre que hablamos de sabor de contexto, nos referimos a esta forma b\xE1sica. Veamos c\xF3mo funciona.</p>',7),Qn=s("Por ejemplo, cuando tienes "),Wn=s("session data"),$n=s(", debes registrar "),ns=n("code",null,[s("ctx"),n("wbr"),s(".session")],-1),ss=s(" en el tipo de contexto. De lo contrario,"),as=t(`<ol><li>no puedes instalar el plugin de sesiones incorporado, y</li><li>no tendr\xE1s acceso a <code>ctx<wbr>.session</code> en tus listeners.</li></ol><blockquote><p>Aunque usaremos las sesiones como ejemplo aqu\xED, cosas similares se aplican para muchas otras cosas. De hecho, la mayor\xEDa de los plugins te dar\xE1n un context flavor que debes usar.</p></blockquote><p>Un context flavor es simplemente un peque\xF1o tipo nuevo que define las propiedades que deben a\xF1adirse al tipo de contexto. Veamos un ejemplo de un flavor.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">SessionFlavor<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  session<span class="token operator">:</span> <span class="token constant">S</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),es=s("El tipo "),ts=n("code",null,[s("Session"),n("wbr"),s("Flavor")],-1),os=s(" ("),cs={href:"https://doc.deno.land/https://deno.land/x/grammy/mod.ts/~/SessionFlavor",target:"_blank",rel:"noopener noreferrer"},ps=s("Referencia API"),ls=s(") es sencillo: s\xF3lo define la propiedad "),is=n("code",null,"session",-1),rs=s(". Toma un par\xE1metro de tipo que definir\xE1 la estructura real de los datos de la sesi\xF3n."),us=t(`<p>\xBFQu\xE9 utilidad tiene esto? As\xED es como puedes dar flavor a tu context con session data:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Context<span class="token punctuation">,</span> SessionFlavor <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;grammy&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// Declarar que \`ctx.session\` es de tipo \`string\`.</span>
<span class="token keyword">type</span> <span class="token class-name">MyContext</span> <span class="token operator">=</span> Context <span class="token operator">&amp;</span> SessionFlavor<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Ahora puedes usar el plugin de sesi\xF3n, y tienes acceso a <code>ctx<wbr>.session</code>:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Ahora \`str\` es de tipo \`string\`.</span>
  <span class="token keyword">const</span> str <span class="token operator">=</span> ctx<span class="token punctuation">.</span>session<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="transformative-context-flavors" tabindex="-1"><a class="header-anchor" href="#transformative-context-flavors" aria-hidden="true">#</a> Transformative Context Flavors</h3><p>El otro tipo de context flavor es m\xE1s potente. En lugar de instalarse con el operador <code>&amp;</code>, deben instalarse as\xED:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Context <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;grammy&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> SomeFlavorA <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;my-plugin&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">MyContext</span> <span class="token operator">=</span> SomeFlavorA<span class="token operator">&lt;</span>Context<span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Todo lo dem\xE1s funciona de la misma manera.</p><p>Cada plugin (oficial) indica en su documentaci\xF3n si debe usarse a trav\xE9s de un additive or via transformative context flavor.</p><h3 id="combinando-diferentes-context-flavors" tabindex="-1"><a class="header-anchor" href="#combinando-diferentes-context-flavors" aria-hidden="true">#</a> Combinando Diferentes Context Flavors</h3><p>Si tienes diferentes <a href="#additive-context-flavors">additive context flavors</a>, puedes simplemente instalarlos as\xED:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">MyContext</span> <span class="token operator">=</span> Context <span class="token operator">&amp;</span> FlavorA <span class="token operator">&amp;</span> FlavorB <span class="token operator">&amp;</span> FlavorC<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>El orden de los flavors del contexto no importa, puedes combinarlos en el orden que quieras.</p><p>M\xFAltiple <a href="#transformative-context-flavors">transformative context flavors</a> tambi\xE9n pueden combinarse:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">MyContext</span> <span class="token operator">=</span> FlavorX<span class="token operator">&lt;</span>FlavorY<span class="token operator">&lt;</span>FlavorZ<span class="token operator">&lt;</span>Context<span class="token operator">&gt;&gt;&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Aqu\xED, el orden podr\xEDa importar, ya que <code>FlavorZ</code> transforma primero a <code>Context</code>, luego a <code>FlavorY</code>, y el resultado de esto ser\xE1 transformado de nuevo por <code>FlavorX</code>. (En la pr\xE1ctica, no hay que preocuparse por esto porque los plugins no suelen chocar entre s\xED).</p><p>Incluso se pueden mezclar additive and transformative flavors:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">MyContext</span> <span class="token operator">=</span> FlavorX<span class="token operator">&lt;</span>
  FlavorY<span class="token operator">&lt;</span>
    FlavorZ<span class="token operator">&lt;</span>
      Context <span class="token operator">&amp;</span> FlavorA <span class="token operator">&amp;</span> FlavorB <span class="token operator">&amp;</span> FlavorC
    <span class="token operator">&gt;</span>
  <span class="token operator">&gt;</span>
<span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18);function ds(ks,ms){const r=l("AutotagPage"),o=l("ExternalLinkIcon"),c=l("RouterLink"),p=l("CodeGroupItem"),i=l("CodeGroup");return d(),k("div",null,[b,a(r,{config:'[{"url":["/plugins"],"exclude":["console-time","middlewares","autoquote","guide","session","keyboard","/"],"tag":[{"template":"official","text":"OFFICIAL","desc":"This plugin is published and maintained by grammY","locale":{"es":{"text":"OFICIAL","desc":"Este plugin es publicado y mantenido por grammY"},"id":{"text":"RESMI","desc":"Plugin ini dipublikasi dan dikelola oleh grammY"},"zh":{"text":"\u5B98\u65B9\u7EF4\u62A4","desc":"\u8FD9\u4E2A\u63D2\u4EF6\u662F\u7531grammY\u53D1\u5E03\u548C\u7EF4\u62A4\u7684"}}}]},{"url":["/plugins"],"include":["console-time","middlewares","autoquote"],"tag":[{"template":"thirdparty","text":"THIRD-PARTY","desc":"This plugin is maintained by third-party","locale":{"es":{"text":"DE TERCEROS","desc":"Este plugin es mantenido por terceros"},"id":{"text":"PIHAK KETIGA","desc":"Plugin ini dikelola oleh pihak ketiga"},"zh":{"text":"\u7B2C\u4E09\u65B9","desc":"\u8FD9\u4E2A\u63D2\u4EF6\u662F\u7531\u7B2C\u4E09\u65B9\u7EF4\u62A4\u7684"}}}]},{"url":["/hosting"],"exclude":["gcf","comparison"],"tag":[{"template":"deno","desc":"This setup is able to run Deno bots","locale":{"es":{"desc":"Esta configuraci\xF3n es capaz de ejecutar bots Deno"},"id":{"desc":"Konfigurasi ini dapat dijalankan di bot Deno"},"zh":{"desc":"\u8FD9\u4E2A\u8BBE\u7F6E\u80FD\u591F\u8FD0\u884CDeno\u673A\u5668\u4EBA"}}}]},{"url":["/hosting"],"include":["heroku","vps"],"tag":[{"template":"nodejs","desc":"This setup is able to run Node.js bots","locale":{"es":{"desc":"Esta configuraci\xF3n es capaz de ejecutar bots Node.js"},"id":{"desc":"Konfigurasi ini dapat dijalankan di bot Node.js"},"zh":{"desc":"\u8FD9\u4E2A\u8BBE\u7F6E\u80FD\u591F\u8FD0\u884CNode.js\u673A\u5668\u4EBA"}}}]}]'}),n("p",null,[v,g,h,n("a",x,[y,a(o)]),_]),f,n("p",null,[w,j,q,n("a",C,[E,z,D,a(o)]),M]),P,n("p",null,[T,B,A,n("a",F,[O,a(o)]),S,I,R,L,V]),Y,n("div",U,[G,n("p",null,[N,H,K,n("a",J,[X,a(o)]),Z]),n("p",null,[Q,W,$,n("a",nn,[sn,a(o)]),an]),en]),n("p",null,[tn,n("a",on,[cn,a(o)]),pn]),ln,n("p",null,[rn,n("a",un,[dn,a(o)]),kn]),mn,n("p",null,[bn,a(c,{to:"/es/guide/middleware.html"},{default:e(()=>[vn]),_:1}),gn]),hn,xn,yn,_n,n("p",null,[fn,a(c,{to:"/es/guide/middleware.html"},{default:e(()=>[wn]),_:1}),jn]),n("div",qn,[Cn,n("p",null,[En,a(c,{to:"/es/guide/middleware.html"},{default:e(()=>[zn]),_:1}),Dn]),Mn]),Pn,a(i,null,{default:e(()=>[a(p,{title:"TypeScript",active:""},{default:e(()=>[Tn]),_:1}),a(p,{title:"JavaScript"},{default:e(()=>[Bn]),_:1})]),_:1}),n("p",null,[An,n("a",Fn,[On,a(o)]),Sn]),In,n("p",null,[Rn,a(c,{to:"/es/plugins/router.html"},{default:e(()=>[Ln]),_:1}),Vn,a(c,{to:"/es/plugins/menu.html"},{default:e(()=>[Yn]),_:1}),Un,Gn,Nn]),Hn,a(i,null,{default:e(()=>[a(p,{title:"TypeScript",active:""},{default:e(()=>[Kn]),_:1}),a(p,{title:"JavaScript",active:""},{default:e(()=>[Jn]),_:1}),a(p,{title:"Deno"},{default:e(()=>[Xn]),_:1})]),_:1}),Zn,n("p",null,[Qn,a(c,{to:"/es/plugins/session.html"},{default:e(()=>[Wn]),_:1}),$n,ns,ss]),as,n("p",null,[es,ts,os,n("a",cs,[ps,a(o)]),ls,is,rs]),us])}const vs=u(m,[["render",ds],["__file","context.html.vue"]]);export{vs as default};
