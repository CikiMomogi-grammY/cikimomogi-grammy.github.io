import{_ as p,r as o,o as r,c,b as e,a,w as l,d as n,e as t}from"./app.9a621f1c.js";const d={},m=a("h1",{id:"internasionalisasi-dengan-fluent-fluent",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#internasionalisasi-dengan-fluent-fluent","aria-hidden":"true"},"#"),n(" Internasionalisasi dengan Fluent ("),a("code",null,"fluent"),n(")")],-1),k={href:"https://projectfluent.org/",target:"_blank",rel:"noopener noreferrer"},g=n("Fluent"),h=n(" adalah sebuah sistem penerjemah bahasa yang dibuat oleh Mozilla Foundation dengan tujuan supaya hasil terjemahan terdengar lebih natural. Ia memiliki sebuah syntax yang canggih dan elegan, sehingga memungkinkan siapa pun dapat menerjemah secara efisien serta bisa dipahami dengan baik. Plugin ini memanfaatkan sistem penerjemah tersebut untuk membuat bot grammY menjadi fasih serta menghasilkan terjemahan berkualitas tinggi."),b={class:"custom-container tip"},_=a("p",{class:"custom-container-title"},"Fluent vs i18n",-1),v=n("Jangan bingung membedakan plugin ini dengan plugin "),f=n("i18n"),y=n("."),x=n("Plugin "),j=n("i18n"),w=n(" merupakan versi upgrade dari plugin ini. Ia dapat digunakan baik di Deno maupun Node.js."),F=t(`<h2 id="inisialisasi-fluent" tabindex="-1"><a class="header-anchor" href="#inisialisasi-fluent" aria-hidden="true">#</a> Inisialisasi Fluent</h2><p>Pertama-tama, inisialisasi instance Fluent.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Fluent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@moebius/fluent&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> fluent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fluent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Kemudian, kamu perlu menambahkan setidaknya satu terjemahan ke instance Fluent.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">await</span> fluent<span class="token punctuation">.</span><span class="token function">addTranslation</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// Tentukan satu atau lebih locale yang didukung oleh terjemahanmu:</span>
  locales<span class="token operator">:</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span>

  <span class="token comment">// Kamu bisa menentukan isi terjemahannya secara langsung:</span>
  source<span class="token operator">:</span> <span class="token string">&quot;{ISI FILE TERJEMAHAN KAMU}&quot;</span><span class="token punctuation">,</span>

  <span class="token comment">// Atau file-file terjemahannya:</span>
  filePath<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>__dirname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/feature-1/translation.id.ftl</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>__dirname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/feature-2/translation.id.ftl</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>

  <span class="token comment">// Semua elemen Fluent bisa dikonfigurasi dengan mudah</span>
  bundleOptions<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// Gunakan opsi ini untuk menghindari karakter huruf</span>
    <span class="token comment">// yang tidak terlihat di sekitar objek placeable.</span>
    useIsolating<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="menulis-pesan-terjemahan" tabindex="-1"><a class="header-anchor" href="#menulis-pesan-terjemahan" aria-hidden="true">#</a> Menulis Pesan Terjemahan</h2>`,6),C=n("Syntax Fluent sangat mudah untuk dipelajari. Kamu bisa memulainya dengan meniru "),I={href:"https://projectfluent.org/#examples",target:"_blank",rel:"noopener noreferrer"},q=n("contoh resmi berikut"),P=n(" atau dengan mempelajari "),E={href:"https://projectfluent.org/fluent/guide/",target:"_blank",rel:"noopener noreferrer"},T=n("panduan lengkap syntax"),K=n("."),S=t(`<p>Untuk saat ini, mari kita mulai dengan contoh berikut:</p><div class="language-ftl ext-ftl line-numbers-mode"><pre class="language-ftl"><code>-bot-name = Bot Krupuk

welcome =
  Selamat datang, {$name}, di {-bot-name}!
  Kamu { NUMBER($krupukCount) -&gt;
    [0] tidak punya krupuk sama sekali
    [1] cuma punya {$krupukCount} krupuk
    *[other] punya {$krupukCount} krupuk
  }.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Contoh di atas menggunakan tiga fitur utama Fluent, yaitu: <strong>terms</strong>, <strong>variable substitution</strong> (placeable), dan <strong>pluralization</strong>.</p><p><code>welcome</code> adalah <strong>message ID</strong>-nya. Ia digunakan untuk merujuk pesan terkait ketika di-render.</p><p>Statement <code>-bot<wbr>-name <wbr>=<wbr> Bot Krupuk</code> menghasilkan sebuah <strong>term</strong> dengan nama <code>bot<wbr>-name</code> yang memiliki value <code>Bot Krupuk</code>. Construct <code>{<wbr>-bot<wbr>-name}</code> merujuk ke term yang telah ditentukan sebelumnya dan akan digantikan dengan value dari term tersebut ketika di-render.</p><p>Statement <code>{$name}</code> akan digantikan dengan value dari variable <code>name</code> yang perlu kamu tentukan sendiri di function terjemahannya.</p>`,6),B=n("Statement terakhir ("),N=a("em",null,"baris 5 sampai 9",-1),A=n(") menghasilkan sebuah "),D=a("strong",null,"selector",-1),M=n(" (sangat mirip dengan statement switch) yang akan menerima hasil dari function "),R=a("code",null,"NUMBER",-1),L=n(" khusus yang menggunakan variable "),Y=a("code",null,[n("krupuk"),a("wbr"),n("Count")],-1),z=n(" lalu memilih salah satu dari tiga pilihan pesan yang akan di-render berdasarkan value yang sesuai. Function "),$=a("code",null,"NUMBER",-1),U=n(" akan mengembalikan sebuah "),O={href:"https://www.unicode.org/cldr/cldr-aux/charts/30/supplemental/language_plural_rules.html",target:"_blank",rel:"noopener noreferrer"},V=n("kategori plural CLDR"),H=n(" berdasarkan value yang disediakan dan locale yang digunakan. Dengan demikian, pluralisasi dapat diterapkan dengan baik."),J=t('<blockquote><p>Catatan dari penerjemah: Di bahasa Indonesia, kata plural atau jamak tidak terlalu mempengaruhi struktur kalimat. Contoh: satu apel, dua apel, orang pertama, orang kedua, orang ketiga. Tetapi, di bahasa Inggris misalnya, kata jamak dan tunggal akan berpengaruh. Perhatikan perbedaan imbuhan \u201Cs\u201D di akhir kata benda jamak dan imbuhan \u201C-st, -nd, -rd\u201D di contoh berikut. Contoh: one apple, two apple<strong>s</strong>, 1<strong>st</strong> person, 2<strong>nd</strong> person, 3<strong>rd</strong> person.</p></blockquote><h2 id="konfigurasi-grammy" tabindex="-1"><a class="header-anchor" href="#konfigurasi-grammy" aria-hidden="true">#</a> Konfigurasi grammY</h2><p>Sekarang, mari kita lihat bagaimana pesan di atas bisa di-render oleh sebuah bot. Pertama-tama, kita perlu mengonfigurasi grammY untuk menggunakan plugin ini.</p>',3),G=n("Kamu juga perlu mengonfigurasi bot kamu untuk menggunakan Fluent context flavor. Jika kamu masih merasa asing dengan konsep tersebut, sebaiknya kamu pahami terlebih dahulu materi "),Q=n("Context Flavors"),W=n("."),X=t(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Context <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;grammy&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> FluentContextFlavor <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@grammyjs/fluent&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// Tambahkan context type aplikasimu</span>
<span class="token comment">// dengan flavor interface yang telah disediakan.</span>
<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">MyAppContext</span> <span class="token operator">=</span>
  <span class="token operator">&amp;</span> Context
  <span class="token operator">&amp;</span> FluentContextFlavor<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Buat instance bot dengan cara berikut agar bisa menggunakan context type yang sudah ditambahkan tadi:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> bot <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bot<span class="token operator">&lt;</span>MyAppContext<span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Langkah terakhir adalah menambahkan plugin Fluent itu sendiri ke grammY:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>bot<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">useFluent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  fluent<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Pastikan untuk menambahkan <a href="#inisialisasi-fluent">instance Fluent yang sudah dibuat sebelumnya</a>.</p><h2 id="me-render-pesan-yang-sudah-diterjemahkan" tabindex="-1"><a class="header-anchor" href="#me-render-pesan-yang-sudah-diterjemahkan" aria-hidden="true">#</a> Me-render Pesan yang Sudah Diterjemahkan</h2><p>Mantap, sekarang kita punya segalanya untuk me-render pesan kita! Mari kita buat percobaan dengan menentukan sebuah command di bot kita:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>bot<span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&quot;i18n_test&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Panggil &quot;translate&quot; atau &quot;t&quot; helper untuk me-render pesan</span>
  <span class="token comment">// dengan cara memasukkan ID-nya serta paramater tambahan lainnya:</span>
  <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span><span class="token function">t</span><span class="token punctuation">(</span><span class="token string">&quot;welcome&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> ctx<span class="token punctuation">.</span>from<span class="token punctuation">.</span>first_name<span class="token punctuation">,</span>
    krupukCount<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Sekarang, kamu bisa memulai bot-mu dan menggunakan command <code>/i18n<wbr>_test</code>. Seharusnya, hasil render akan menampilkan pesan berikut:</p><div class="language-text ext-text"><pre class="language-text"><code>Selamat datang, Budi, di Bot Krupuk!
Kamu cuma punya 1 krupuk.
</code></pre></div><p>Tentu saja, kamu akan melihat nama kamu sendiri alih-alih \u201CBudi\u201D. Coba ubah value dari variable <code>krupuk<wbr>Count</code> untuk melihat bagaimana pesan yang telah di-render akan berubah!</p><p>Perlu diketahui, kamu bisa menggunakan function translation di berbagai tempat selama terdapat <code>Context</code> di tempat tersebut. Library-nya akan secara otomatis menentukan locale terbaik untuk setiap user berdasarkan preferensi personal mereka (bahasa yang dipakai di pengaturan aplikasi Telegram). Kamu cuma perlu membuat beberapa file terjemahan lain serta memastikan semua terjemahan tersinkronisasi dengan baik.</p><h2 id="tahap-selanjutnya" tabindex="-1"><a class="header-anchor" href="#tahap-selanjutnya" aria-hidden="true">#</a> Tahap Selanjutnya</h2>`,14),Z=n("Baca "),nn={href:"https://projectfluent.org/",target:"_blank",rel:"noopener noreferrer"},an=n("dokumentasi Fluent"),en=n(" hingga tuntas, khususnya "),sn={href:"https://projectfluent.org/fluent/guide/",target:"_blank",rel:"noopener noreferrer"},tn=n("panduan syntax"),on=n("."),ln={href:"https://github.com/grammyjs/fluent#i18n-plugin-replacement",target:"_blank",rel:"noopener noreferrer"},un=n("Beralih dari plugin "),pn=a("code",null,"i18n",-1),rn=n("."),cn=n("Pahami dengan baik "),dn={href:"https://github.com/the-moebius/fluent#readme",target:"_blank",rel:"noopener noreferrer"},mn=a("code",null,[n("@moebius"),a("wbr"),n("/fluent")],-1),kn=n("."),gn=a("h2",{id:"ringkasan-plugin",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#ringkasan-plugin","aria-hidden":"true"},"#"),n(" Ringkasan Plugin")],-1),hn=a("li",null,[n("Nama: "),a("code",null,"fluent")],-1),bn=n("Sumber: "),_n={href:"https://github.com/grammyjs/fluent",target:"_blank",rel:"noopener noreferrer"},vn=n("https://"),fn=a("wbr",null,null,-1),yn=n("github"),xn=a("wbr",null,null,-1),jn=n(".com"),wn=a("wbr",null,null,-1),Fn=n("/grammyjs"),Cn=a("wbr",null,null,-1),In=n("/fluent");function qn(Pn,En){const u=o("AutotagPage"),s=o("ExternalLinkIcon"),i=o("RouterLink");return r(),c("div",null,[m,e(u,{config:'[{"url":["/plugins"],"exclude":["console-time","middlewares","autoquote","guide","session","keyboard","/"],"tag":[{"template":"official","text":"OFFICIAL","desc":"This plugin is published and maintained by grammY","locale":{"es":{"text":"OFICIAL","desc":"Este plugin es publicado y mantenido por grammY"},"id":{"text":"RESMI","desc":"Plugin ini dipublikasi dan dikelola oleh grammY"},"zh":{"text":"\u5B98\u65B9\u7EF4\u62A4","desc":"\u8FD9\u4E2A\u63D2\u4EF6\u662F\u7531grammY\u53D1\u5E03\u548C\u7EF4\u62A4\u7684"}}}]},{"url":["/plugins"],"include":["console-time","middlewares","autoquote"],"tag":[{"template":"thirdparty","text":"THIRD-PARTY","desc":"This plugin is maintained by third-party","locale":{"es":{"text":"DE TERCEROS","desc":"Este plugin es mantenido por terceros"},"id":{"text":"PIHAK KETIGA","desc":"Plugin ini dikelola oleh pihak ketiga"},"zh":{"text":"\u7B2C\u4E09\u65B9","desc":"\u8FD9\u4E2A\u63D2\u4EF6\u662F\u7531\u7B2C\u4E09\u65B9\u7EF4\u62A4\u7684"}}}]},{"url":["/hosting"],"exclude":["gcf","comparison"],"tag":[{"template":"deno","desc":"This setup is able to run Deno bots","locale":{"es":{"desc":"Esta configuraci\xF3n es capaz de ejecutar bots Deno"},"id":{"desc":"Konfigurasi ini dapat dijalankan di bot Deno"},"zh":{"desc":"\u8FD9\u4E2A\u8BBE\u7F6E\u80FD\u591F\u8FD0\u884CDeno\u673A\u5668\u4EBA"}}}]},{"url":["/hosting"],"include":["heroku","vps"],"tag":[{"template":"nodejs","desc":"This setup is able to run Node.js bots","locale":{"es":{"desc":"Esta configuraci\xF3n es capaz de ejecutar bots Node.js"},"id":{"desc":"Konfigurasi ini dapat dijalankan di bot Node.js"},"zh":{"desc":"\u8FD9\u4E2A\u8BBE\u7F6E\u80FD\u591F\u8FD0\u884CNode.js\u673A\u5668\u4EBA"}}}]}]'}),a("p",null,[a("a",k,[g,e(s)]),h]),a("div",b,[_,a("p",null,[v,e(i,{to:"/id/plugins/i18n.html"},{default:l(()=>[f]),_:1}),y]),a("p",null,[x,e(i,{to:"/id/plugins/i18n.html"},{default:l(()=>[j]),_:1}),w])]),F,a("p",null,[C,a("a",I,[q,e(s)]),P,a("a",E,[T,e(s)]),K]),S,a("p",null,[B,N,A,D,M,R,L,Y,z,$,U,a("a",O,[V,e(s)]),H]),J,a("p",null,[G,e(i,{to:"/id/guide/context.html#context-flavor"},{default:l(()=>[Q]),_:1}),W]),X,a("ul",null,[a("li",null,[Z,a("a",nn,[an,e(s)]),en,a("a",sn,[tn,e(s)]),on]),a("li",null,[a("a",ln,[un,pn,rn,e(s)])]),a("li",null,[cn,a("a",dn,[mn,e(s)]),kn])]),gn,a("ul",null,[hn,a("li",null,[bn,a("a",_n,[vn,fn,yn,xn,jn,wn,Fn,Cn,In,e(s)])])])])}const Kn=p(d,[["render",qn],["__file","fluent.html.vue"]]);export{Kn as default};
