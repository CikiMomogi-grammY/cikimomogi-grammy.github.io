import{_ as l,r as c,o as u,c as d,a as n,b as a,w as e,d as s,e as t}from"./app.cd079934.js";const k={},m=n("h1",{id:"alojamiento-heroku",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#alojamiento-heroku","aria-hidden":"true"},"#"),s(" Alojamiento: Heroku")],-1),b=n("blockquote",null,[n("p",null,[s("Asumimos que tienes los conocimientos b\xE1sicos sobre la creaci\xF3n de bots usando grammY. Si a\xFAn no est\xE1s preparado, \xA1no dudes en dirigirte a nuestra amigable "),n("a",{href:"../guide"},"Gu\xEDa"),s("! :cohete:")])],-1),h=s("Este tutorial te guiar\xE1 en c\xF3mo desplegar un bot de Telegram en "),v={href:"https://heroku.com/",target:"_blank",rel:"noopener noreferrer"},g=s("Heroku"),_=s(" usando "),q=s("webhooks"),f=s(" o "),y=s("long polling"),w=s(". Tambi\xE9n asumimos que ya tienes una cuenta en Heroku."),x=t(`<h2 id="requisitos-previos" tabindex="-1"><a class="header-anchor" href="#requisitos-previos" aria-hidden="true">#</a> Requisitos previos</h2><p>Primero, instala algunas dependencias:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># Crear un directorio de proyecto.</span>
<span class="token function">mkdir</span> grammy-bot
<span class="token builtin class-name">cd</span> grammy-bot
<span class="token function">npm</span> init <span class="token parameter variable">--y</span>

<span class="token comment"># Instalar las dependencias principales.</span>
<span class="token function">npm</span> <span class="token function">install</span> grammy express

<span class="token comment"># Instala las dependencias de desarrollo.</span>
<span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> typescript @types/express @types/node

<span class="token comment"># Crear la configuraci\xF3n de TypeScript.</span>
npx tsc <span class="token parameter variable">--init</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Almacenaremos nuestros archivos TypeScript dentro de una carpeta <code>src</code>, y nuestros archivos compilados en una carpeta <code>dist</code>. Crea las carpetas en el directorio ra\xEDz del proyecto. Luego, dentro de la carpeta <code>src</code>, crea un nuevo archivo llamado <code>bot<wbr>.ts</code>. Nuestra estructura de carpetas deber\xEDa ser as\xED:</p><div class="language-asciiart ext-asciiart"><pre class="language-asciiart"><code>.
\u251C\u2500\u2500 node_modules/
\u251C\u2500\u2500 dist/
\u251C\u2500\u2500 src/
\u2502   \u2514\u2500\u2500 bot.ts
\u251C\u2500\u2500 package.json
\u251C\u2500\u2500 package-lock.json
\u2514\u2500\u2500 tsconfig.json
</code></pre></div><p>Despu\xE9s, abre <code>tsconfig<wbr>.json</code> y c\xE1mbialo para usar esta configuraci\xF3n:</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ESNEXT&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;module&quot;</span><span class="token operator">:</span> <span class="token string">&quot;esnext&quot;</span><span class="token punctuation">,</span> <span class="token comment">// cambiado de commonjs a esnext</span>
    <span class="token property">&quot;lib&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;ES2021&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;outDir&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./dist/&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;strict&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;moduleResolution&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;esModuleInterop&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;skipLibCheck&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;forceConsistentCasingInFileNames&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;include&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;src&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Debido a que la opci\xF3n <code>module</code> anterior se ha establecido de <code>commonjs</code> a <code>esnext</code>, tenemos que a\xF1adir <code>&quot;type&quot;:<wbr> &quot;module&quot;</code> a nuestro <code>package<wbr>.json</code>. Nuestro <code>package<wbr>.json</code> deber\xEDa ser ahora similar a esto:</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;grammy-bot&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0.0.1&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;dist/app.js&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;module&quot;</span><span class="token punctuation">,</span> <span class="token comment">// a\xF1adir propiedad &quot;type&quot;: &quot;module&quot;</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;dev-build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tsc&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;author&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;license&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ISC&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;dependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;grammy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^1.2.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;express&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^4.17.1&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;devDependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;typescript&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^4.3.5&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;@types/express&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^4.17.13&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;@types/node&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^16.3.1&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;keywords&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),j=s("Como hemos mencionado anteriormente, tenemos dos opciones para recibir datos de Telegram: los webhooks y el long polling. \xA1Puedes aprender m\xE1s sobre las dos ventajas y luego decidir cu\xE1l es la adecuada en "),T=s("estos incre\xEDbles consejos"),C=s("!"),E=n("h2",{id:"webhooks",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#webhooks","aria-hidden":"true"},"#"),s(" Webhooks")],-1),P=n("blockquote",null,[n("p",null,[s("Si decides usar el long polling en su lugar, puedes saltarte esta secci\xF3n y pasar a la "),n("a",{href:"#long-polling"},"secci\xF3n sobre long polling"),s(". \u{1F680}")])],-1),N=s("En resumen, a diferencia del long polling, los webhooks no se ejecutan continuamente para comprobar los mensajes entrantes de Telegram. Esto reducir\xE1 la carga del servidor y nos ahorrar\xE1 un mont\xF3n de "),O={href:"https://devcenter.heroku.com/articles/free-dyno-hours",target:"_blank",rel:"noopener noreferrer"},S=s("horas de dyno"),B=s(", especialmente cuando est\xE9s usando la capa gratuita. \u{1F601}"),A=t(`<p>Bien, \xA1continuemos! \xBFRecuerdas que hemos creado <code>bot<wbr>.ts</code> antes? No vamos a volcar todo el c\xF3digo all\xED, y dejar la codificaci\xF3n del bot hasta usted. En su lugar, vamos a hacer que <code>app<wbr>.ts</code> sea nuestro principal punto de entrada. Eso significa que cada vez que Telegram (o cualquier otra persona) visite nuestro sitio, <code>express</code> decide qu\xE9 parte de tu servidor ser\xE1 responsable de manejar la petici\xF3n. Esto es \xFAtil cuando est\xE1s desplegando tanto el sitio web como el bot en el mismo dominio. Adem\xE1s, al dividir los c\xF3digos en diferentes archivos, hace que nuestro c\xF3digo se vea ordenado. \u2728</p><h3 id="express-y-su-middleware" tabindex="-1"><a class="header-anchor" href="#express-y-su-middleware" aria-hidden="true">#</a> Express y su Middleware</h3><p>Ahora crea <code>app<wbr>.ts</code> dentro de la carpeta <code>src</code> y escribe este c\xF3digo dentro:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> express <span class="token keyword">from</span> <span class="token string">&quot;express&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> webhookCallback <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;grammy&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> bot <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./bot&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> domain <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">DOMAIN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> secretPath <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">BOT_TOKEN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>secretPath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token function">webhookCallback</span><span class="token punctuation">(</span>bot<span class="token punctuation">,</span> <span class="token string">&quot;express&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">PORT</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \xA1Aseg\xFArate de que es \`https\` y no \`http\`!</span>
  <span class="token keyword">await</span> bot<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">setWebhook</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">https://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>domain<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>secretPath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Echemos un vistazo a nuestro c\xF3digo anterior:</p>`,5),z=n("code",null,[s("process"),n("wbr"),s(".env")],-1),I=s(": Recuerda, \xA1nunca almacenes credenciales en nuestro c\xF3digo! Para crear "),H={href:"https://www.freecodecamp.org/news/using-environment-variables-the-right-way/",target:"_blank",rel:"noopener noreferrer"},L=s("variables de entorno"),D=s(" en Heroku, dir\xEDgete a "),R={href:"https://devcenter.heroku.com/articles/config-vars",target:"_blank",rel:"noopener noreferrer"},W=s("esta gu\xEDa"),F=s("."),G=n("li",null,[n("code",null,[s("secret"),n("wbr"),s("Path")]),s(": Puede ser nuestro "),n("code",null,[s("BOT"),n("wbr"),s("_TOKEN")]),s(" o cualquier cadena aleatoria. Es una buena pr\xE1ctica ocultar la ruta de nuestro bot, tal y como se explica en Telegram (https://core.telegram.org/bots/api#setwebhook).")],-1),K=t(`<div class="custom-container tip"><p class="custom-container-title">\u26A1 Optimizaci\xF3n (opcional)</p><p><code>bot<wbr>.api<wbr>.set<wbr>Webhook</code> en la l\xEDnea 14 siempre se ejecutar\xE1 cuando Heroku inicie su servidor de nuevo. Para los bots de bajo tr\xE1fico, esto ser\xE1 para cada solicitud. Sin embargo, no necesitamos que este c\xF3digo se ejecute cada vez que llega una petici\xF3n. Por lo tanto, podemos eliminar esta parte completamente, y ejecutar el <code>GET</code> s\xF3lo una vez manualmente. Abre este enlace en tu navegador web despu\xE9s de desplegar nuestro bot:</p><div class="language-asciiart ext-asciiart"><pre class="language-asciiart"><code>https://api.telegram.org/bot&lt;bot_token&gt;/setWebhook?url=&lt;webhook_url&gt;
</code></pre></div><p>Ten en cuenta que algunos navegadores requieren que codifiques manualmente (https://en.wikipedia.org/wiki/Percent-encoding#Reserved_characters) la <code>webhook<wbr>_url</code> antes de pasarla. Por ejemplo, si tenemos el token bot <code>abcd:<wbr>1234</code> y la URL <code>https://<wbr>grammybot<wbr>.herokuapp<wbr>.com<wbr>/secret<wbr>_path</code>, entonces nuestro enlace deber\xEDa tener este aspecto:</p><div class="language-asciiart ext-asciiart"><pre class="language-asciiart"><code>https://api.telegram.org/botabcd:1234/setWebhook?url=https%3A%2F%2Fgrammybot.herokuapp.com%2Fsecret_path
</code></pre></div></div>`,1),M={class:"custom-container tip"},V=n("p",{class:"custom-container-title"},"Optimizaci\xF3n (opcional)",-1),$=s("Utilice "),U=s("Webhook Reply"),Y=s(" para una mayor eficiencia."),J=t(`<h3 id="creando-bot-ts" tabindex="-1"><a class="header-anchor" href="#creando-bot-ts" aria-hidden="true">#</a> Creando <code>bot<wbr>.ts</code></h3><p>Siguiente paso, dir\xEDgete a <code>bot<wbr>.ts</code>:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Bot <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;grammy&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">BOT_TOKEN</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Falta BOT_TOKEN.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> bot <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bot</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">BOT_TOKEN</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

bot<span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&quot;start&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&quot;\xA1Hola!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&quot;\xA1Tengo otro mensaje!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Bien. Ya hemos terminado de codificar nuestros archivos principales. Pero antes de ir a los pasos de despliegue, podemos optimizar nuestro bot un poco. Como siempre, esto es opcional.</p>`,4),Q={class:"custom-container tip"},X=n("p",{class:"custom-container-title"},"\u26A1 Optimizaci\xF3n (opcional)",-1),Z=s("Cada vez que tu servidor se inicie, grammY solicitar\xE1 "),nn={href:"https://core.telegram.org/bots/api#getme",target:"_blank",rel:"noopener noreferrer"},sn=s("informaci\xF3n sobre el bot"),an=s(" a Telegram para proporcionarla en el "),en=s("objeto de contexto"),on=s(" bajo "),tn=n("code",null,[s("ctx"),n("wbr"),s(".me")],-1),pn=s(". Podemos establecer la "),cn={href:"https://doc.deno.land/https://deno.land/x/grammy/mod.ts/~/BotConfig#botInfo",target:"_blank",rel:"noopener noreferrer"},rn=s("informaci\xF3n sobre el bot"),ln=s(" para evitar un exceso de llamadas a "),un=n("code",null,[s("get"),n("wbr"),s("Me")],-1),dn=s("."),kn=s("Abre este enlace "),mn=n("code",null,[s("https://"),n("wbr"),s("api"),n("wbr"),s(".telegram"),n("wbr"),s(".org"),n("wbr"),s("/bot<bot"),n("wbr"),s("_token>"),n("wbr"),s("/get"),n("wbr"),s("Me")],-1),bn=s(" en tu navegador web favorito. Se recomienda usar "),hn={href:"https://www.mozilla.org/en-US/firefox/",target:"_blank",rel:"noopener noreferrer"},vn=s("Firefox"),gn=s(" ya que muestra muy bien el formato "),_n=n("code",null,"json",-1),qn=s("."),fn=n("li",null,[s("Cambia nuestro c\xF3digo en la l\xEDnea 4 de arriba y rellena el valor de acuerdo con los resultados de "),n("code",null,[s("get"),n("wbr"),s("Me")]),s(":")],-1),yn=t(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> bot <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bot</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">BOT_TOKEN</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  botInfo<span class="token operator">:</span> <span class="token punctuation">{</span>
    id<span class="token operator">:</span> <span class="token number">111111111</span><span class="token punctuation">,</span>
    is_bot<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    first_name<span class="token operator">:</span> <span class="token string">&quot;xxxxxxxxx&quot;</span><span class="token punctuation">,</span>
    username<span class="token operator">:</span> <span class="token string">&quot;xxxxxxbot&quot;</span><span class="token punctuation">,</span>
    can_join_groups<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    can_read_all_group_messages<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    supports_inline_queries<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),wn=n("p",null,[s("\xA1Genial! \xA1Es hora de preparar nuestro entorno de despliegue! \xA1Directamente a la "),n("a",{href:"#despliegue"},"Secci\xF3n de Despliegue"),s(" todo el mundo! \u{1F4AA}")],-1),xn=n("h2",{id:"long-polling",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#long-polling","aria-hidden":"true"},"#"),s(" Long Polling")],-1),jn={class:"custom-container warning"},Tn=n("p",{class:"custom-container-title"},"Su script se ejecutar\xE1 de forma continua cuando utilice el sondeo largo",-1),Cn=s("A menos que sepa c\xF3mo manejar este comportamiento, aseg\xFArese de que tiene suficientes "),En={href:"https://devcenter.heroku.com/articles/free-dyno-hours",target:"_blank",rel:"noopener noreferrer"},Pn=s("horas de dyno"),Nn=s("."),On=t(`<blockquote><p>\xBFConsiderar el uso de webhooks? Vaya a la secci\xF3n <a href="#webhooks">webhooks</a>. \u{1F680}</p></blockquote><p>Usar long polling en tu servidor no es siempre una mala idea. A veces, es adecuado para los bots de recolecci\xF3n de datos que no necesitan responder r\xE1pidamente y manejar muchos datos. Si quieres hacerlo una vez por hora, puedes hacerlo f\xE1cilmente. Eso es algo que no puedes controlar con los webhooks. Si tu bot se inunda de mensajes, ver\xE1s muchas peticiones de webhooks, sin embargo, puedes limitar m\xE1s f\xE1cilmente la tasa de actualizaciones a procesar con un long polling.</p><h3 id="creando-bot-ts-1" tabindex="-1"><a class="header-anchor" href="#creando-bot-ts-1" aria-hidden="true">#</a> Creando <code>bot<wbr>.ts</code></h3><p>Abramos el archivo <code>bot<wbr>.ts</code> que hemos creado anteriormente. Que contenga estas l\xEDneas de c\xF3digo:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Bot <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;grammy&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">BOT_TOKEN</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Falta BOT_TOKEN.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> bot <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bot</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">BOT_TOKEN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

bot<span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span>
  <span class="token string">&quot;start&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&quot;\xA1Estoy corriendo en Heroku usando long polling!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

bot<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),Sn=s("\xA1Ya est\xE1! Estamos listos para desplegarlo. Bastante sencillo, \xBFverdad? \u{1F603} Si crees que es demasiado f\xE1cil, \xA1consulta nuestra "),Bn=s("Lista de verificaci\xF3n de despliegue"),An=s("! \u{1F680}"),zn=t(`<h2 id="despliegue" tabindex="-1"><a class="header-anchor" href="#despliegue" aria-hidden="true">#</a> Despliegue</h2><p>No\u2026 nuestro <em>Rocket Bot</em> no est\xE1 listo para ser lanzado todav\xEDa. \xA1Completa estas etapas primero!</p><h3 id="compilar-archivos" tabindex="-1"><a class="header-anchor" href="#compilar-archivos" aria-hidden="true">#</a> Compilar Archivos</h3><p>Ejecute este c\xF3digo en su terminal para compilar los archivos TypeScript a JavaScript:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>npx tsc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Si se ejecuta con \xE9xito y no imprime ning\xFAn error, nuestros archivos compilados deber\xEDan estar en la carpeta <code>dist</code> con extensiones <code>.js</code>.</p><h3 id="configurar-el-procfile" tabindex="-1"><a class="header-anchor" href="#configurar-el-procfile" aria-hidden="true">#</a> Configurar el <code>Procfile</code></h3>`,7),In=s("Por el momento, "),Hn=n("code",null,"Heroku",-1),Ln=s(" tiene varios "),Dn={href:"https://devcenter.heroku.com/articles/free-dyno-hours",target:"_blank",rel:"noopener noreferrer"},Rn=s("tipos de dynos"),Wn=s(". Dos de ellos son:"),Fn=t(`<ul><li><p><strong>Web dynos</strong>: <br> <em>Web dynos</em> son dynos del proceso \u201Cweb\u201D que reciben tr\xE1fico HTTP de los routers. Este tipo de dyno tiene un tiempo de espera de 30 segundos para ejecutar c\xF3digo. Adem\xE1s, se suspender\xE1 si no hay ninguna petici\xF3n que atender en un periodo de 30 minutos. Este tipo de dyno es muy adecuado para los <em>webhooks</em>.</p></li><li><p><strong>Worker dynos</strong>: <br> <em>Worker dynos</em> se utilizan normalmente para trabajos en segundo plano. NO tiene un tiempo de espera, y NO dormir\xE1 si no maneja ninguna petici\xF3n web. Se adapta al <em>long polling</em>.</p></li></ul><p>Crear un archivo llamado <code>Procfile</code> sin extensi\xF3n de archivo en el directorio ra\xEDz de nuestro proyecto. Por ejemplo, <code>Procfile<wbr>.txt</code> y <code>procfile</code> no son v\xE1lidos. A continuaci\xF3n, escriba este formato de c\xF3digo de una sola l\xEDnea:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&lt;tipo de dyno&gt;: &lt;omando para ejecutar nuestro archivo de entrada principal&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Para nuestro caso deber\xEDa serlo:</p>`,4),Gn=n("div",{class:"language-text ext-text line-numbers-mode"},[n("pre",{class:"language-text"},[n("code",null,`web: node dist/app.js
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),Kn=n("div",{class:"language-text ext-text line-numbers-mode"},[n("pre",{class:"language-text"},[n("code",null,`worker: node dist/bot.js
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),Mn=n("h3",{id:"configurar-git",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#configurar-git","aria-hidden":"true"},"#"),s(" Configurar Git")],-1),Vn=s("Vamos a desplegar nuestro bot usando "),$n={href:"https://devcenter.heroku.com/articles/git",target:"_blank",rel:"noopener noreferrer"},Un=s("Git y Heroku Cli"),Yn=s(". Aqu\xED est\xE1 el enlace para la instalaci\xF3n:"),Jn={href:"https://git-scm.com/download/",target:"_blank",rel:"noopener noreferrer"},Qn=s("Instrucciones de instalaci\xF3n de Git"),Xn={href:"https://devcenter.heroku.com/articles/heroku-cli#download-and-install",target:"_blank",rel:"noopener noreferrer"},Zn=s("Instrucciones de instalaci\xF3n de Heroku CLI"),ns=t(`<p>Suponiendo que ya los tienes en tu m\xE1quina, y tienes una terminal abierta en la ra\xEDz del directorio de nuestro proyecto. Ahora inicializa un repositorio git local ejecutando este c\xF3digo en tu terminal:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>A continuaci\xF3n, tenemos que evitar que los archivos innecesarios lleguen a nuestro servidor de producci\xF3n, en este caso <code>Heroku</code>. Crea un archivo llamado <code>.gitignore</code> en la ra\xEDz del directorio de nuestro proyecto. Luego a\xF1ade esta lista:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>node_modules/
src/
tsconfig.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Nuestra estructura final de carpetas deber\xEDa tener este aspecto:</p>`,5),ss=n("div",{class:"language-asciiart ext-asciiart"},[n("pre",{class:"language-asciiart"},[n("code",null,`.
\u251C\u2500\u2500 .git/
\u251C\u2500\u2500 node_modules/
\u251C\u2500\u2500 dist/
\u2502   \u251C\u2500\u2500 bot.js
\u2502   \u2514\u2500\u2500 app.js
\u251C\u2500\u2500 src/
\u2502   \u251C\u2500\u2500 bot.ts
\u2502   \u2514\u2500\u2500 app.ts
\u251C\u2500\u2500 package.json
\u251C\u2500\u2500 package-lock.json
\u251C\u2500\u2500 tsconfig.json
\u251C\u2500\u2500 Procfile
\u2514\u2500\u2500 .gitignore
`)])],-1),as=n("div",{class:"language-asciiart ext-asciiart"},[n("pre",{class:"language-asciiart"},[n("code",null,`.
\u251C\u2500\u2500 .git/
\u251C\u2500\u2500 node_modules/
\u251C\u2500\u2500 dist/
\u2502   \u2514\u2500\u2500 bot.js
\u251C\u2500\u2500 src/
\u2502   \u2514\u2500\u2500 bot.ts
\u251C\u2500\u2500 package.json
\u251C\u2500\u2500 package-lock.json
\u251C\u2500\u2500 tsconfig.json
\u251C\u2500\u2500 Procfile
\u2514\u2500\u2500 .gitignore
`)])],-1),es=t(`<p>Confirmar los archivos a nuestro repositorio git:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>
<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;My first commit&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="configurar-un-heroku-remote" tabindex="-1"><a class="header-anchor" href="#configurar-un-heroku-remote" aria-hidden="true">#</a> Configurar un Heroku Remote</h3>`,3),os=s("Si ya has creado una "),ts={href:"https://dashboard.heroku.com/apps/",target:"_blank",rel:"noopener noreferrer"},ps=s("aplicaci\xF3n Heroku"),is=s(", pasa el nombre de tu "),cs=n("code",null,"Aplicaci\xF3n existente",-1),rs=s(" en "),ls=n("code",null,[s("<mi"),n("wbr"),s("App>")],-1),us=s(" a continuaci\xF3n, y ejecuta el c\xF3digo. De lo contrario, ejecute "),ds=n("code",null,"Nueva aplicaci\xF3n",-1),ks=s("."),ms=n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[s(`heroku create
`),n("span",{class:"token function"},"git"),s(" remote "),n("span",{class:"token parameter variable"},"-v"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),bs=n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[s("heroku git:remote "),n("span",{class:"token parameter variable"},"-a"),s(),n("span",{class:"token operator"},"<"),s("myApp"),n("span",{class:"token operator"},">"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),hs=t(`<h3 id="despliegue-del-codigo" tabindex="-1"><a class="header-anchor" href="#despliegue-del-codigo" aria-hidden="true">#</a> Despliegue del c\xF3digo</h3><p>Finalmente, pulsa el <em>bot\xF3n rojo</em> y \xA1despega! \u{1F680}</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> push heroku main
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Si no funciona, es probable que nuestra rama git no sea <code>main</code> sino <code>master</code>. Pulsa este <em>bot\xF3n azul</em> en su lugar:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> push heroku master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,5);function vs(gs,_s){const o=c("ExternalLinkIcon"),p=c("RouterLink"),i=c("CodeGroupItem"),r=c("CodeGroup");return u(),d("div",null,[m,b,n("p",null,[h,n("a",v,[g,a(o)]),_,a(p,{to:"/es/guide/deployment-types.html#%C2%BFcomo-funcionan-los-webhooks"},{default:e(()=>[q]),_:1}),f,a(p,{to:"/es/guide/deployment-types.html#%C2%BFcomo-funciona-el-long-polling"},{default:e(()=>[y]),_:1}),w]),x,n("p",null,[j,a(p,{to:"/es/guide/deployment-types.html"},{default:e(()=>[T]),_:1}),C]),E,P,n("p",null,[N,n("a",O,[S,a(o)]),B]),A,n("ul",null,[n("li",null,[z,I,n("a",H,[L,a(o)]),D,n("a",R,[W,a(o)]),F]),G]),K,n("div",M,[V,n("p",null,[$,a(p,{to:"/es/guide/deployment-types.html#webhook-reply"},{default:e(()=>[U]),_:1}),Y])]),J,n("div",Q,[X,n("p",null,[Z,n("a",nn,[sn,a(o)]),an,a(p,{to:"/es/guide/context.html"},{default:e(()=>[en]),_:1}),on,tn,pn,n("a",cn,[rn,a(o)]),ln,un,dn]),n("ol",null,[n("li",null,[kn,mn,bn,n("a",hn,[vn,a(o)]),gn,_n,qn]),fn]),yn]),wn,xn,n("div",jn,[Tn,n("p",null,[Cn,n("a",En,[Pn,a(o)]),Nn])]),On,n("p",null,[Sn,a(p,{to:"/es/advanced/deployment.html#long-polling"},{default:e(()=>[Bn]),_:1}),An]),zn,n("p",null,[In,Hn,Ln,n("a",Dn,[Rn,a(o)]),Wn]),Fn,a(r,null,{default:e(()=>[a(i,{title:"Webhook",active:""},{default:e(()=>[Gn]),_:1}),a(i,{title:"Long Polling"},{default:e(()=>[Kn]),_:1})]),_:1}),Mn,n("p",null,[Vn,n("a",$n,[Un,a(o)]),Yn]),n("ul",null,[n("li",null,[n("a",Jn,[Qn,a(o)])]),n("li",null,[n("a",Xn,[Zn,a(o)])])]),ns,a(r,null,{default:e(()=>[a(i,{title:"Webhook",active:""},{default:e(()=>[ss]),_:1}),a(i,{title:"Long Polling"},{default:e(()=>[as]),_:1})]),_:1}),es,n("p",null,[os,n("a",ts,[ps,a(o)]),is,cs,rs,ls,us,ds,ks]),a(r,null,{default:e(()=>[a(i,{title:"New app",active:""},{default:e(()=>[ms]),_:1}),a(i,{title:"Existing app",active:""},{default:e(()=>[bs]),_:1})]),_:1}),hs])}const fs=l(k,[["render",vs],["__file","heroku.html.vue"]]);export{fs as default};
